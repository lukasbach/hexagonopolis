{"version":3,"sources":["state/resources.ts","state/board.ts","state/cards.ts","state/tiles.ts","state/color.ts","state/level.ts","gamedata/campaigns.ts","state/campaign.ts","state/dialogProgress.ts","state/index.ts","gamedata/tiles.ts","gamedata/resources.ts","utils/loadLevel.ts","gamedata/levels.ts","utils/HexagonPositioningService.ts","components/commonui/TileBoardContainer.tsx","types.ts","utils/AssetService.ts","state/filters.ts","utils/testRequirements.ts","utils/UrlRoutingService.ts","hooks.ts","components/commonui/MetricText.tsx","components/commonui/EmphasizedText.tsx","components/level/BottomBarCard.tsx","components/level/BottomBar.tsx","components/commonui/Button.tsx","components/commonui/Message.tsx","components/level/LevelDialog.tsx","components/level/LevelInformation.tsx","components/commonui/Tile.tsx","components/level/HoveredTileInformation.tsx","components/level/RightBar.tsx","components/level/BoardTile.tsx","components/level/GameContainer.tsx","components/campaign/CampaignTitle.tsx","components/campaign/CampaignMenu.tsx","utils/loadCampaignBoard.ts","components/menu/MainMenuButton.tsx","components/menu/MenuBackground.tsx","components/menu/MainMenu.tsx","components/ScreenRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DefineResource","TypedAction","define","ResetResourcesList","reducer","TypedReducer","builder","withHandler","TYPE","state","_ref","resource","concat","Object","toConsumableArray","build","PlaceTile","SetEmptyTile","SetBorderTile","HoverOverTile","SelectTile","ResetBoard","abstractTile","x","y","setWith","tiles","filter","tile","type","_ref2","asset","resources","_ref3","_ref4","undefined","map","t","isHovering","objectSpread","_ref5","isSelected","SetDeck","TakeCardFromDeck","AddCard","RemoveCard","RemoveCardFromIndex","SelectCard","ResetCards","abstractTileId","hand","i","cardIndex","tileIds","splice","selectedIndex","cards","deck","_ref6","count","takenCards","push","Math","floor","random","length","DefineAbstractTile","ResetAbstractTileDefinitions","SetPrimaryColor","color","LoadLevel","level","campaigns","id","name","backgroundColor","author","website","centering","tilemap","tilemapLegend","a","levelId","requires","b","c","e","f","h","g","d","Z","LoadCampaign","LeaveCampaign","campaignId","campaign","find","Error","NextDialogMessage","ResetDialogProgress","combineReducers","board","dialogProgress","logger","createLogger","collapsed","initialState","store","createStore","applyMiddleware","assetName","description","isPositive","defaultValue","pointsMultiplier","loadLevel","dispatch","cleanState","defineResources","defineTiles","addCards","loadBoard","create","primaryColor","forEach","gamemode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","row","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","piece","resolvedPiece","extraTiles","tileId","_iterator3","split","repo","levels","iconAsset","-","s","requirements","grants","resourceId","amount","min","predialog","talkerAsset","talkerName","side","message","B","m","w","W","p","v","HexagonPositioningService","classCallCheck","this","createClass","key","tileWidth","arguments","border","isEvenY","getHeight","getUpperPartHeight","HEXAGON_UPPER_PART_PER_TOTAL_HEIGHT","HEXAGON_WIDTH_PER_HEIGHT","unEvenOffset","ResourceMetricIntent","AssetSize","styles","StyleSheet","container","position","width","height","overflow","innerContainer","window","innerWidth","innerHeight","TileBoardContainer","props","useEffect","initialCentering","containerRef","current","_HexagonPositioningSe","getTilePositioning","_HexagonPositioningSe2","slicedToArray","xPos","yPos","console","log","scrollTo","offsetWidth","offsetHeight","_useState","useState","_useState2","dragStart","setDragStart","_useState3","_useState4","oldScroll","setOldScroll","useRef","react","className","css","style","background","Color","darken","string","onMouseDown","button","scrollLeft","scrollTop","clientX","clientY","isDragging","onMouseUp","onMouseMove","onContextMenu","preventDefault","stopPropagation","ref","children","AssetService","size","x4","getUrl","tileOrObject","getSizeText","getSizeFileSuffix","getFileEnding","svg","x3","x2","x1","x1dot5","x0dot75","x0dot5","isSvg","getCards","r","card","idx","isCardSelected","getSelectedCard","getResource","join","getHoveredTile","getBoardTile","getBoardTiles","getNeighbourHexagonsCoordinates","reduce","nextResource","getCurrentDialogMessage","postdialog","getPreDialogIndex","testRequirements","allResources","tileResources","insufficientResourceIds","getResourceMetricFromTile","result","tr","resourceRequirement","max","UrlRoutingService","location","hash","capamignIdSure","getCampaign","getPieces","pieces","usePrimaryColor","useMappedState","useUrlRouting","options","setLevel","setCampaign","lineHeight","fontWeight","imageContainer","display","textAlign","image","verticalAlign","metricName","marginRight","metricValue","positiveIntent","negativeIntent","MetricText","resourceInformation","abs","asReq","longText","JSON","stringify","textColor","intent","DEFAULT","TO_LOW_COUNT","SUFFICIENT","title","src","getObjectUrl","alt","text","textShadow","fontFamily","bigText","EmphasizedText","fontSize","sizes","px","marginLeft","overflowX","top","bottom","borderRadius","zIndex","transition",":hover","innerContainerSelected","countContainer","right","marginTop","margin","resourceListTitle","marginBottom","textContainer","resourcesColumn","flexGrow","padding","BottomBarCard","shadedColor","ratio","cardCount","EmphasizedText_EmphasizedText","cursor","boxShadow","onClick","onSelect","getTileUrl","MetricText_MetricText","minHeight","winContainer","winBackLink","paddingBottom","borderBottom","BottomBar","useDispatch","hasWon","_useMappedState2","gameMode","useCheckWin","reduced","cardsReduced","index","BottomBarCard_BottomBarCard","buttonContainer","buttonContainerSmall","pseudoButton","opacity","left",":active",":focus","outline","buttonHovering","buttonSmall","Button","setIsHovering","shade","lighten","small","onMouseEnter","onMouseLeave","containerLeft","paddingRight","containerRight","paddingLeft","containerCenter","avatar","avatarLeft","avatarRight","personName","Message","avatarAsset","LevelDialog","preDialogIndex","nextMessage","preDialog","msg","Message_Message","flexDirection","grow","overflowY","footer","header","LevelInformation","Button_Button","setTimeout","LevelDialog_LevelDialog","postDialog","containerAbsolutePositioning","containerNoAbsolutePositioning","hitBoxes","hitBox","getHitboxRectangleMetrics","justifyContent","Tile","imageWidth","noAbsolutePositioning","noOffset","degree","transform","onHover","titleContainer","HoveredTileInformation","Tile_Tile","tileContainer","RightBar","hoveredTile","all","HoveredTileInformation_HoveredTileInformation","LevelInformation_LevelInformation","BoardTile","_useMappedState","selectedCard","onBuy","selectedCardIndex","canBuy","useBuyTile","insuffucientRequirements","noHoverEvent","r2","inTile","includes","verticalSplitContainer","horizontalSplitContainer","GameContainer","setIsDragging","boardTiles","TileBoardContainer_TileBoardContainer","BoardTile_BoardTile","RightBar_RightBar","BottomBar_BottomBar","heading","paddingTop","subTitle","rightNotes","backButton","CampaignTitle","CampaignMenu","campaignBoard","l","loadCampaignBoard","CampaignTitle_CampaignTitle","outerContainer","buttonContainerHovering","MainMenuButton","fill","MenuBackground","assets","char","charAt","parseInt","containerVerticalCentering","containerHorizontalCentering","twoButtonContainer","footerLink","textDecoration","TwoButtonContainer","MainMenu","MenuBackground_MenuBackground","MainMenuButton_MainMenuButton","MainMenu_TwoButtonContainer","open","href","target","ScreenRouter","isInGame","isInCampaign","isInMainMenu","GameContainer_GameContainer","CampaignMenu_CampaignMenu","MainMenu_MainMenu","App","getLevel","levelObj","index_es","Provider","ScreenRouter_ScreenRouter","Boolean","hostname","match","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7ec7417.chunk.js","sourcesContent":["import {TypedAction, TypedReducer} from \"redoodle\";\nimport {IResource} from \"../types\";\n\nexport const DefineResource = TypedAction.define(\"@@resources/define\")<{\n  resource: IResource\n}>();\n\nexport const ResetResourcesList = TypedAction.define(\"@@resources/reset\")<{}>();\n\nconst reducer = TypedReducer.builder<IResource[]>()\n  .withHandler(DefineResource.TYPE, (state, { resource }) => [...state, resource])\n  .withHandler(ResetResourcesList.TYPE, () => [])\n  .build();\n\nexport default reducer;","import {setWith, TypedAction, TypedReducer} from \"redoodle\";\nimport {IAbstractTileInformation, IAbstractTileInformationResourceInformation, IBoardState} from \"../types\";\n\nexport const PlaceTile = TypedAction.define(\"@@board/place\")<{\n  abstractTile: IAbstractTileInformation;\n  x: number;\n  y: number;\n}>();\n\nexport const SetEmptyTile = TypedAction.define(\"@@board/setempty\")<{\n  x: number;\n  y: number;\n  asset: string;\n  resources?: IAbstractTileInformationResourceInformation[];\n}>();\n\nexport const SetBorderTile = TypedAction.define(\"@@board/setborder\")<{\n  x: number;\n  y: number;\n  asset: string;\n}>();\n\nexport const HoverOverTile = TypedAction.define(\"@@board/hover\")<{\n  x?: number;\n  y?: number;\n}>();\n\nexport const SelectTile = TypedAction.define(\"@@board/select\")<{\n  x?: number;\n  y?: number;\n}>();\n\nexport const ResetBoard = TypedAction.define(\"@@board/reset\")<{}>();\n\nconst reducer = TypedReducer.builder<IBoardState>()\n  .withHandler(PlaceTile.TYPE, (state, { abstractTile, x, y }) => setWith(state, {\n    tiles: [\n      ...state.tiles.filter(tile => !(tile.x === x && tile.y === y)),\n      { type: 'placed', abstractTile, x, y }\n    ]\n  }))\n  .withHandler(SetEmptyTile.TYPE, (state, { x, y, asset, resources }) => setWith(state, {\n    tiles: [\n      ...state.tiles.filter(tile => !(tile.x === x && tile.y === y)),\n      { type: 'empty', x, y, asset, resources: resources || [] }\n      ]\n  }))\n  .withHandler(SetBorderTile.TYPE, (state, { x, y, asset }) => setWith(state, {\n    tiles: [\n      ...state.tiles.filter(tile => !(tile.x === x && tile.y === y)),\n      { type: 'border', x, y, asset, resources: [] }\n      ]\n  }))\n  .withHandler(HoverOverTile.TYPE, (state, { x, y }) => {\n    if (x === undefined && y === undefined) {\n      return setWith(state, {\n        tiles: state.tiles.map(t => t.isHovering ? { ...t, isHovering: undefined } : t)\n      });\n    } else {\n      return setWith(state, {\n        tiles: state.tiles.map(t => t.x === x && t.y === y ? { ...t, isHovering: true } : { ...t, isHovering: undefined })\n      });\n    }\n  })\n  .withHandler(SelectTile.TYPE, (state, { x, y }) => {\n    if (!x && !y) {\n      return setWith(state, {\n        tiles: state.tiles.map(t => t.isSelected ? { ...t, isSelected: undefined } : t)\n      });\n    } else {\n      return setWith(state, {\n        tiles: state.tiles.map(t => t.x === x && t.y === y ? { ...t, isSelected: true } : t)\n      });\n    }\n  })\n  .withHandler(ResetBoard.TYPE, (state) => setWith(state, { tiles: [] }))\n  .build();\n\nexport default reducer;","import {setWith, TypedAction, TypedReducer} from \"redoodle\";\nimport {ICardsState} from \"../types\";\n\nexport const SetDeck = TypedAction.define(\"@@cards/setdeck\")<{\n  cards: string[];\n}>();\n\nexport const TakeCardFromDeck = TypedAction.define(\"@@cards/takeFromDeck\")<{\n  count?: number;\n}>();\n\nexport const AddCard = TypedAction.define(\"@@cards/add\")<{\n  abstractTileId: string;\n}>();\n\nexport const RemoveCard = TypedAction.define(\"@@cards/remove\")<{\n  abstractTileId: string;\n}>();\n\nexport const RemoveCardFromIndex = TypedAction.define(\"@@cards/removeFromIndex\")<{\n  cardIndex: number;\n}>();\n\nexport const SelectCard = TypedAction.define(\"@@cards/select\")<{\n  cardIndex?: number;\n}>();\n\nexport const ResetCards = TypedAction.define(\"@@cards/reset\")<{}>();\n\n\nconst reducer = TypedReducer.builder<ICardsState>()\n  .withHandler(AddCard.TYPE, (state, { abstractTileId }) =>\n    setWith(state, { hand: [...state.hand, abstractTileId] }))\n  .withHandler(RemoveCard.TYPE, (state, { abstractTileId }) =>\n    setWith(state, { hand: state.hand.filter(i => i !== abstractTileId) }))\n  .withHandler(RemoveCardFromIndex.TYPE, (state, { cardIndex }) => {\n    const tileIds = [...state.hand];\n    tileIds.splice(cardIndex, 1);\n\n    return setWith(state, { hand: tileIds });\n  })\n  .withHandler(SelectCard.TYPE, (state, { cardIndex }) =>\n    setWith(state, { selectedIndex: cardIndex }))\n  .withHandler(SetDeck.TYPE, (state, { cards }) => setWith(state, { deck: cards }))\n  .withHandler(TakeCardFromDeck.TYPE, (state, { count }) => {\n    const takenCards = [];\n\n    for (let i = 0; i < (count || 1); i++) {\n      takenCards.push(state.deck[Math.floor(Math.random() * state.deck.length)]);\n    }\n\n    return setWith(state, { hand: [...state.hand, ...takenCards] });\n  })\n  .withHandler(ResetCards.TYPE, (state) => setWith(state, { hand: [], deck: [] }))\n  .build();\n\nexport default reducer;","import {TypedAction, TypedReducer} from \"redoodle\";\nimport {IAbstractTileInformation} from \"../types\";\n\nexport const DefineAbstractTile = TypedAction.define(\"@@tiles/define\")<{\n  abstractTile: IAbstractTileInformation;\n}>();\n\nexport const ResetAbstractTileDefinitions = TypedAction.define(\"@@tiles/reset\")<{}>();\n\nconst reducer = TypedReducer.builder<IAbstractTileInformation[]>()\n  .withHandler(DefineAbstractTile.TYPE, (state, { abstractTile }) => [...state, abstractTile])\n  .withHandler(ResetAbstractTileDefinitions.TYPE, () => [])\n  .build();\n\nexport default reducer;","import {TypedAction, TypedReducer} from \"redoodle\";\n\nexport const SetPrimaryColor = TypedAction.define(\"@@color/set\")<{\n  color: string;\n}>();\n\nconst reducer = TypedReducer.builder<string>()\n  .withHandler(SetPrimaryColor.TYPE, (state, { color }) => color)\n  .build();\n\nexport default reducer;","import {TypedAction, TypedReducer} from \"redoodle\";\nimport {ILevel} from \"../types\";\n\nexport const LoadLevel = TypedAction.define(\"@@level/load\")<{\n  level?: ILevel\n}>();\n\nconst reducer = TypedReducer.builder<ILevel | undefined>()\n  .withHandler(LoadLevel.TYPE, (state, { level }) => level)\n  .build();\n\nexport default reducer;","import {ICampaign} from \"../types\";\n\nexport const campaigns: ICampaign[] = [\n  {\n    id: 'campaign-default',\n    name: 'Hexagonopolis Campaign',\n    backgroundColor: '#aaa',\n    author: {\n      name: 'Lukas Bach',\n      website: 'https://lukasbach.com'\n    },\n    centering: [1, 1],\n    tilemap: [\n      'a----Ad-d',\n      '------dd-',\n      '--beh--d-',\n      '-c-fg--d-',\n      '---d-ddd-',\n      '--d---ddd',\n      '-d-d-dd-d',\n      'd--------',\n    ],\n    tilemapLegend: {\n      'a': { levelId: 'campaign-0-0', requires: [], asset: 'tile143' },\n      'b': { levelId: 'campaign-0-1', requires: [], asset: 'tile129' },\n      'c': { levelId: 'campaign-0-2', requires: [], asset: 'tile160' },\n      'e': { levelId: 'campaign-0-3', requires: [], asset: 'tile146' },\n      'f': { levelId: 'campaign-0-4', requires: [], asset: 'tile158' },\n      'h': { levelId: 'campaign-0-cityfill-0', requires: [], asset: 'tile93' },\n      'g': { levelId: 'campaign-0-5', requires: [], asset: 'tile124' },\n      'd': { levelId: 'comingsoon', requires: [], asset: 'tile5' },\n      /*'A': { levelId: 'fillmaptest', requires: [], asset: 'tile120' },*/\n      'Z': { levelId: 'test-level', requires: [], asset: 'tile80' },\n    }\n  },\n  {\n    id: 'campaign-mapfills',\n    name: 'Fill the Map!',\n    backgroundColor: '#aaa',\n    author: {\n      name: 'Lukas Bach',\n      website: 'https://lukasbach.com'\n    },\n    centering: [1, 4],\n    tilemap: [\n      'a----c',\n      '--b---',\n      '------',\n    ],\n    tilemapLegend: {\n      'a': { levelId: 'campaign-0-cityfill-0', requires: [], asset: 'tile125' },\n      'b': { levelId: 'fillthecity-sand', requires: [], asset: 'tile150' },\n      'c': { levelId: 'fillthecity-mars', requires: [], asset: 'tile110' },\n    }\n  }\n];","import {TypedAction, TypedReducer} from \"redoodle\";\nimport {ICampaign} from \"../types\";\nimport {campaigns} from \"../gamedata/campaigns\";\n\nexport const LoadCampaign = TypedAction.define(\"@@campaign/load\")<{\n  campaignId: string;\n}>();\n\nexport const LeaveCampaign = TypedAction.define(\"@@campaign/leave\")<{}>();\n\nconst reducer = TypedReducer.builder<ICampaign | undefined>()\n  .withHandler(LoadCampaign.TYPE, (state, { campaignId }) => {\n    const campaign = campaigns.find(c => c.id === campaignId);\n\n    if (!campaign) {\n      throw Error(`Could not find campaign with ID ${campaignId}.`);\n    }\n\n    return campaign;\n  })\n  .withHandler(LeaveCampaign.TYPE, () => undefined)\n  .build();\n\nexport default reducer;","import {TypedAction, TypedReducer} from \"redoodle\";\n\nexport const NextDialogMessage = TypedAction.define(\"@@dialogProgress/next\")<{}>();\n\nexport const ResetDialogProgress = TypedAction.define(\"@@dialogProgress/reset\")<{}>();\n\nconst reducer = TypedReducer.builder<number>()\n  .withHandler(NextDialogMessage.TYPE, (state) => state + 1)\n  .withHandler(ResetDialogProgress.TYPE, (state) => 0)\n  .build();\n\nexport default reducer;","import {combineReducers, createStore} from \"redoodle\";\nimport {IReduxState} from \"../types\";\nimport {createLogger} from \"redux-logger\";\nimport {applyMiddleware} from \"redux\";\nimport resources from './resources';\nimport board from './board';\nimport cards from './cards';\nimport tiles from './tiles';\nimport color from './color';\nimport level from './level';\nimport campaign from './campaign';\nimport dialogProgress from './dialogProgress';\n\nconst reducer = combineReducers<IReduxState>({\n  resources, board, cards, tiles, color, level, campaign, dialogProgress\n});\n\nconst logger = (createLogger as any)({\n  collapsed: true\n});\n\nconst initialState: IReduxState = {\n  resources: [],\n  board: {\n    tiles: []\n  },\n  cards: {\n    hand: [],\n    deck: []\n  },\n  tiles: [],\n  color: '#34495e',\n  level: undefined,\n  campaign: undefined,\n  dialogProgress: 0\n};\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  (applyMiddleware as any)(logger)\n);","import {IAbstractTileInformation} from \"../types\";\nimport tiles from './tiles.json';\n\n/*const oldtiles: IAbstractTileInformation[] = [\n  {\n    id: 'blocking_rock',\n    name: 'Blocking Rock',\n    description: 'Welp, I guess you can\\'t build here!',\n    assetName: 'tile14',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'blocking_rock_2',\n    name: 'Blocking Rock',\n    description: 'Welp, I guess you can\\'t build here!',\n    assetName: 'tile15',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'blocking_rock_3',\n    name: 'Blocking Rock',\n    description: 'Welp, I guess you can\\'t build here!',\n    assetName: 'tile16',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'joker',\n    name: 'Starter Joker',\n    assetName: 'tile92',\n    requirements: [\n    ],\n    grants: [\n      { resourceId: 'agriculture', amount: 5 },\n      { resourceId: 'military', amount: 5 },\n      { resourceId: 'social', amount: 5 },\n      { resourceId: 'stone', amount: 5 },\n      { resourceId: 'wood', amount: 5 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'farm_fields',\n    name: 'Small Farm',\n    assetName: 'tile124',\n    requirements: [\n      { resourceId: 'wood', min: 1 },\n      { resourceId: 'social', min: 1 },\n    ],\n    grants: [\n      { resourceId: 'agriculture', amount: 2 },\n      { resourceId: 'relaxing', amount: 1 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'farm_smelt',\n    name: 'Farm Smelt',\n    assetName: 'tile128',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'farm_smith',\n    name: 'Farm Smith',\n    assetName: 'tile126',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'lumberjack',\n    name: 'Lumberjack',\n    assetName: 'tile129',\n    requirements: [\n      { resourceId: 'wood', min: 5 }\n    ],\n    grants: [\n      { resourceId: 'wood', amount: 5 },\n      { resourceId: 'agriculture', amount: 1 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'road_grass_stone',\n    name: 'Stone Transportation Road',\n    assetName: 'tile79',\n    requirements: [\n      { resourceId: 'stone', min: 2 }\n    ],\n    grants: [\n      { resourceId: 'stone', amount: 2 }\n    ],\n    costs: 0\n  },\n  {\n    id: 'road_grass_wood',\n    name: 'Wood Transportation Road',\n    assetName: 'tile79',\n    requirements: [\n      { resourceId: 'wood', min: 2 }\n    ],\n    grants: [\n      { resourceId: 'wood', amount: 2 }\n    ],\n    costs: 0\n  },\n  {\n    id: 'residential0',\n    name: 'Residential Home',\n    assetName: 'tile143',\n    requirements: [\n      { resourceId: 'noise', max: 2 },\n      { resourceId: 'social', min: 2 },\n    ],\n    grants: [\n      { resourceId: 'waste', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'residential1',\n    name: 'Residential Home',\n    assetName: 'tile144',\n    requirements: [\n      { resourceId: 'noise', max: 2 },\n      { resourceId: 'social', min: 2 },\n    ],\n    grants: [\n      { resourceId: 'waste', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'residential2',\n    name: 'Residential Home',\n    assetName: 'tile145',\n    requirements: [\n      { resourceId: 'noise', max: 2 },\n      { resourceId: 'social', min: 2 },\n    ],\n    grants: [\n      { resourceId: 'waste', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'residential3',\n    name: 'Residential Home',\n    assetName: 'tile146',\n    requirements: [\n      { resourceId: 'noise', max: 2 },\n      { resourceId: 'social', min: 2 },\n    ],\n    grants: [\n      { resourceId: 'waste', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'castle_small',\n    name: 'Small Castle',\n    assetName: 'tile133',\n    requirements: [\n      { resourceId: 'wood', min: 1 },\n      { resourceId: 'military', max: 0 },\n      { resourceId: 'waste', max: 0 },\n    ],\n    grants: [\n      { resourceId: 'relaxing', amount: 2 },\n      { resourceId: 'social', amount: 2 },\n      { resourceId: 'sightseeing', amount: 1 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'castle_big',\n    name: 'Large Castle',\n    assetName: 'tile134',\n    requirements: [\n      { resourceId: 'stone', min: 1 },\n      { resourceId: 'military', max: 0 },\n      { resourceId: 'waste', max: 0 },\n    ],\n    grants: [\n      { resourceId: 'relaxing', amount: 4 },\n      { resourceId: 'social', amount: 3 },\n      { resourceId: 'sightseeing', amount: 3 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'arc',\n    name: 'Roman Triumphal Arc',\n    assetName: 'tile158',\n    requirements: [\n      { resourceId: 'stone', min: 1 },\n      { resourceId: 'military', max: 0 },\n      { resourceId: 'wood', min: 1 },\n    ],\n    grants: [\n      { resourceId: 'relaxing', amount: 2 },\n      { resourceId: 'sightseeing', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'office_small',\n    name: 'Small Office Building',\n    description: 'Lots of people working there! Like almost a quarter of them!',\n    assetName: 'tile103',\n    requirements: [\n      { resourceId: 'stone', min: 1 },\n      { resourceId: 'military', min: 1 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 1 },\n      { resourceId: 'social', amount: 2 },\n      { resourceId: 'waste', amount: 1 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'office_medium',\n    name: 'Medium Office Building',\n    assetName: 'tile161',\n    requirements: [\n      { resourceId: 'stone', min: 2 },\n      { resourceId: 'military', min: 1 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 2 },\n      { resourceId: 'social', amount: 3 },\n      { resourceId: 'waste', amount: 1 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'office_big',\n    name: 'Large Office Building',\n    assetName: 'tile162',\n    requirements: [\n      { resourceId: 'stone', min: 3 },\n      { resourceId: 'military', min: 2 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 3 },\n      { resourceId: 'social', amount: 2 },\n      { resourceId: 'waste', amount: 3 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'shop0',\n    name: 'Shop',\n    assetName: 'tile147',\n    requirements: [\n      { resourceId: 'wood', min: 1 },\n      { resourceId: 'agriculture', min: 1 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 1 },\n      { resourceId: 'social', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'shop1',\n    name: 'Shop',\n    assetName: 'tile148',\n    requirements: [\n      { resourceId: 'wood', min: 1 },\n      { resourceId: 'agriculture', min: 2 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 1 },\n      { resourceId: 'social', amount: 2 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'shop2',\n    name: 'Shop',\n    assetName: 'tile149',\n    requirements: [\n      { resourceId: 'wood', min: 2 },\n      { resourceId: 'social', min: 1 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 1 },\n      { resourceId: 'social', amount: 3 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'waste_plant',\n    name: 'Waste Incineration Plant',\n    assetName: 'tile138',\n    requirements: [\n      { resourceId: 'waste', min: 3 },\n    ],\n    grants: [\n      { resourceId: 'noise', amount: 2 },\n      { resourceId: 'agriculture', amount: 2 },\n      { resourceId: 'fuel', amount: 3 },\n      { resourceId: 'waste', amount: -6 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'church',\n    name: 'Church',\n    assetName: 'tile157',\n    requirements: [\n      { resourceId: 'wood', min: 1 },\n      { resourceId: 'social', min: 1 },\n      { resourceId: 'military', max: 0 },\n      { resourceId: 'noise', max: 2 },\n    ],\n    grants: [\n      { resourceId: 'social', amount: 4 },\n      { resourceId: 'relaxing', amount: 4 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'camping',\n    name: 'Camping place',\n    assetName: 'tile159',\n    requirements: [\n      { resourceId: 'wood', min: 2 },\n      { resourceId: 'noise', min: 0 },\n      { resourceId: 'relaxing', min: 3 }\n    ],\n    grants: [\n      { resourceId: 'social', amount: 3 },\n      { resourceId: 'wood', amount: 1 },\n    ],\n    costs: 0\n  },\n  {\n    id: 'mine',\n    name: 'Mining Shaft',\n    assetName: 'tile160',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'fountain',\n    name: 'Water Fountain',\n    assetName: 'tile93',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'parking',\n    name: 'Parking Lot',\n    assetName: 'tile95',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'trees_grass',\n    name: 'Forest',\n    assetName: 'tile12',\n    requirements: [],\n    grants: [\n      { resourceId: 'wood', amount: 2 }\n    ],\n    costs: 0\n  },\n  {\n    id: 'trees_dirt',\n    name: 'Forest',\n    assetName: 'tile34',\n    requirements: [],\n    grants: [\n      { resourceId: 'wood', amount: 2 }\n    ],\n    costs: 0\n  },\n  {\n    id: 'trees_sand',\n    name: 'Forest',\n    assetName: 'tile56',\n    requirements: [],\n    grants: [\n      { resourceId: 'wood', amount: 2 }\n    ],\n    costs: 0\n  },\n  {\n    id: 'military_hangar',\n    name: 'Military Hangar',\n    assetName: 'tile97',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'military_tanks',\n    name: 'Military Outpost',\n    assetName: 'tile98',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'military_rockets',\n    name: 'Rockets Launch Site',\n    assetName: 'tile99',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n  {\n    id: 'military_turret_small',\n    name: 'Small Turret',\n    assetName: 'tile100',\n    requirements: [],\n    grants: [],\n    costs: 0\n  },\n];*/\n\nexport default tiles as IAbstractTileInformation[];","import {IResource} from \"../types\";\n\nconst resources: IResource[] = [\n  {\n    id: 'agriculture',\n    assetName: 'agriculture',\n    name: 'Agriculture',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'crystal',\n    assetName: 'crystal',\n    name: 'Crystals',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'extraterrestrial',\n    assetName: 'extraterrestrial',\n    name: 'Infested material',\n    description: '',\n    isPositive: false,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'fuel',\n    assetName: 'fuel',\n    name: 'Fuel',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'military',\n    assetName: 'military',\n    name: 'Military',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'noise',\n    assetName: 'noise',\n    name: 'Noise',\n    description: '',\n    isPositive: false,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'relaxing',\n    assetName: 'relaxing',\n    name: 'Relaxing',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'sightseeing',\n    assetName: 'sightseeing',\n    name: 'Sightseeing',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'social',\n    assetName: 'social',\n    name: 'Social',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'stone',\n    assetName: 'stone',\n    name: 'Stone',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'waste',\n    assetName: 'waste',\n    name: 'Waste',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  },\n  {\n    id: 'wood',\n    assetName: 'wood',\n    name: 'Wood',\n    description: '',\n    isPositive: true,\n    defaultValue: 0,\n    pointsMultiplier: 1\n  }\n];\n\nexport default resources;\n","import {ILevel, IResource} from \"../types\";\nimport {Dispatch} from \"redoodle\";\nimport {PlaceTile, ResetBoard, SetEmptyTile} from \"../state/board\";\nimport tiles from \"../gamedata/tiles\";\nimport {DefineAbstractTile, ResetAbstractTileDefinitions} from \"../state/tiles\";\nimport {AddCard, ResetCards, SetDeck, TakeCardFromDeck} from \"../state/cards\";\nimport resources from \"../gamedata/resources\";\nimport {DefineResource, ResetResourcesList} from \"../state/resources\";\nimport {LoadLevel} from \"../state/level\";\nimport {SetPrimaryColor} from \"../state/color\";\n\nexport const loadLevel = (level: ILevel, dispatch: Dispatch) => {\n  cleanState(dispatch);\n  defineResources(level, dispatch);\n  defineTiles(level, dispatch);\n  addCards(level, dispatch);\n  loadBoard(level, dispatch);\n  dispatch(LoadLevel.create({ level }));\n  if (level.primaryColor) {\n    dispatch(SetPrimaryColor.create({ color: level.primaryColor }));\n  }\n};\n\nconst cleanState = (dispatch: Dispatch) => {\n  dispatch(LoadLevel.create({}));\n  dispatch(ResetBoard.create({}));\n  dispatch(ResetAbstractTileDefinitions.create({}));\n  dispatch(ResetResourcesList.create({}));\n  dispatch(ResetCards.create({}));\n};\n\nconst defineResources = (level: ILevel, dispatch: Dispatch) => {\n  resources\n    .forEach((resource: IResource) => dispatch(DefineResource.create({ resource })));\n};\n\nconst defineTiles = (level: ILevel, dispatch: Dispatch) => {\n  tiles.forEach(abstractTile => {\n    dispatch(DefineAbstractTile.create({ abstractTile }));\n  });\n};\n\nconst addCards = (level: ILevel, dispatch: Dispatch) => {\n  if (level.gamemode === \"emptycards\" || level.gamemode === \"sandbox\") {\n    for (let abstractTileId of level.cards) {\n      dispatch(AddCard.create({ abstractTileId }));\n    }\n  } else if (level.gamemode === \"cityfill\") {\n    dispatch(SetDeck.create({ cards: level.cards }));\n    dispatch(TakeCardFromDeck.create({ count: 4 }));\n  }\n};\n\nconst loadBoard = (level: ILevel, dispatch: Dispatch) => {\n  let x = 0;\n  let y = 0;\n  for (let row of level.tilemap) {\n    for (let piece of row.split('')) {\n      const resolvedPiece = level.tilemapLegend[piece];\n\n      if (resolvedPiece) {\n        if (resolvedPiece.type === \"placed\") {\n          const abstractTile = [...tiles, ...(level.extraTiles || [])].find(t => t.id === resolvedPiece.tileId);\n\n          if (!abstractTile) {\n            throw Error(`Could not resolve tile ${resolvedPiece.tileId}.`);\n          }\n\n          dispatch(PlaceTile.create({ abstractTile, x, y }));\n        } else if (resolvedPiece.type === \"empty\") {\n          dispatch(SetEmptyTile.create({ x, y, asset: resolvedPiece.asset, resources: resolvedPiece.resources }));\n        }\n      }\n\n      x++;\n    }\n    y++;\n    x = 0;\n  }\n};\n\n","import {ILevel, ILevelAuthor} from \"../types\";\n\nconst author: ILevelAuthor = {\n  name: 'Lukas Bach',\n  repo: 'TODO',\n  website: 'https://lukasbach.com'\n};\n\nexport const levels: ILevel[] = [\n  {\n    id: 'campaign-0-0',\n    name: 'Tutorial',\n    author,\n    cards: [\n      'tile1', 'tile2'\n    ],\n    gamemode: 'emptycards',\n    iconAsset: 'tile129',\n    backgroundColor: '#2ecc71',\n    centering: [2, 6],\n    tilemap: [\n      '..........',\n      '...-......',\n      '...b--s...',\n      '..--.-....',\n    ],\n    tilemapLegend: {\n      '-': {\n        type: 'empty',\n        asset: 'tile5'\n      },\n      'b': {\n        type: 'placed',\n        tileId: 'blocking_rock'\n      },\n      's': {\n        type: 'placed',\n        tileId: 'tile0'\n      }\n    },\n    extraTiles: [\n      {\n        id: 'tile0',\n        name: 'Farm',\n        description: 'Supplies adjacent fields with agricultural resources. You can place a grocery store on an adjacent tile.',\n        requirements: [],\n        grants: [\n          { resourceId: 'agriculture', amount: 2 }\n        ],\n        assetName: 'tile124'\n      },\n      {\n        id: 'tile1',\n        name: 'Grocery Store',\n        description: 'Supplies adjacent fields with social value. You can place an residential house on an adjacent tile.',\n        requirements: [\n          { resourceId: 'agriculture', min: 2 }\n        ],\n        grants: [\n          { resourceId: 'social', amount: 4 }\n        ],\n        assetName: 'tile148'\n      },\n      {\n        id: 'tile2',\n        name: 'Residential House',\n        description: 'This is the final tile to place. Place this on the board to win the level.',\n        requirements: [\n          { resourceId: 'social', min: 4 }\n        ],\n        grants: [],\n        assetName: 'tile143'\n      }\n    ],\n    predialog: [\n      { talkerAsset: 'zebra', talkerName: 'Tutorial', side: 0, message: 'The goal of the game is to get rid of all cards on the bottom bar.' },\n      { talkerAsset: 'zebra', talkerName: 'Tutorial', side: 0, message: 'Cards require specific resources to be present on the tile that they are placed on.' },\n      { talkerAsset: 'zebra', talkerName: 'Tutorial', side: 0, message: 'If you place a card on the board, all tiles that are directly adjacent will receive the resources that are listed as the card\\'s \"Grants\" resources.'},\n      { talkerAsset: 'zebra', talkerName: 'Tutorial', side: 0, message: 'Try to place all the cards you have toi complete the level!' },\n    ]\n  },\n  {\n    id: 'campaign-0-1',\n    name: 'Getting wood',\n    author,\n    cards: [\n      'final_tile', 'trees_grass', 'trees_grass', 'trees_grass', 'lumberjack'\n    ],\n    gamemode: 'emptycards',\n    iconAsset: 'tile129',\n    backgroundColor: '#2ecc71',\n    tilemap: [\n      '..........',\n      '..---.....',\n      '.b-..--...',\n      '.--b---...',\n      '..---b....',\n    ],\n    tilemapLegend: {\n      '-': {\n        type: 'empty',\n        asset: 'tile5'\n      },\n      'b': {\n        type: 'placed',\n        tileId: 'blocking_rock'\n      }\n    },\n    extraTiles: [\n      {\n        id: 'final_tile',\n        name: 'Mine Shaft',\n        requirements: [\n          { resourceId: 'wood', min: 7 }\n        ],\n        grants: [],\n        assetName: 'tile160'\n      }\n    ],\n    predialog: [\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'Welcome to Hexanopolis! Well, at least to the beginning of it...' },\n      { talkerAsset: 'penguin', talkerName: 'Penguin M.Sc.', side: 2, message: 'This does not look like a large city...' },\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'We need some resource infrastructure before we can start construction.' },\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'Your first goal is to place the mine shaft to guarantee a proper stone supply.' },\n    ]\n  },\n  {\n    id: 'campaign-0-2',\n    name: 'Getting Stone',\n    author,\n    cards: ['road_grass_stone', 'road_grass_stone', 'road_grass_stone', 'stone_processing_site'],\n    gamemode: 'emptycards',\n    backgroundColor: '#2ecc71',\n    iconAsset: 'tile160',\n    tilemap: [\n      'B..b..b.',\n      '.mb--mB.',\n      '..--Bb..',\n      '..---b..',\n      '.m-bB-m.',\n      'Bb....bB',\n    ],\n    centering: [2, 4],\n    tilemapLegend: {\n      '-': {\n        type: 'empty',\n        asset: 'tile5'\n      },\n      'b': {\n        type: 'placed',\n        tileId: 'blocking_rock'\n      },\n      'B': {\n        type: 'placed',\n        tileId: 'blocking_rock_2'\n      },\n      'm': {\n        type: 'placed',\n        tileId: 'preplaced_mineshaft'\n      }\n    },\n    extraTiles: [\n      {\n        id: 'preplaced_mineshaft',\n        name: 'Mine Shaft',\n        requirements: [],\n        grants: [\n          { resourceId: 'stone', amount: 6 }\n        ],\n        assetName: 'tile160'\n      },\n      {\n        id: 'stone_processing_site',\n        name: 'Stone Processing Site',\n        requirements: [\n          { resourceId: 'stone', min: 10 }\n        ],\n        grants: [],\n        assetName: 'tile128'\n      }\n    ],\n    predialog: [\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'With your help, we could establish four large stone excavation sites in the area.' },\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'No we need to connect them to a stone processing site.' },\n      { talkerAsset: 'penguin', talkerName: 'Penguin M.Sc.', side: 2, message: 'The excavation sites seem to be rather far away from each other.' },\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'Yeah, the construction manager was a real monkey...' },\n      { talkerAsset: 'monkey',  talkerName: 'Manager Banana', side: 0, message: 'Excuse me?' },\n      { talkerAsset: 'buffalo', talkerName: 'Mayor Buffalo', side: 0, message: 'Anyway, try to connect the excavation sites with these transportation roads!' },\n      { talkerAsset: 'penguin', talkerName: 'Penguin M.Sc.', side: 2, message: 'I\\'ll see what I can do.' },\n    ]\n  },\n  {\n    id: 'campaign-0-3',\n    name: 'Houses for the poor',\n    author,\n    cards: ['shop0', 'shop1', 'waste_plant', 'residential0', 'residential0', 'residential1', 'residential2', 'farm_fields'],\n    gamemode: 'emptycards',\n    backgroundColor: '#2ecc71',\n    iconAsset: 'tile160',\n    tilemap: [\n      '.w.--w..',\n      '.W---b--',\n      '----W-..',\n      '.W---..B',\n      '--B----.',\n      '..--.-b.',\n    ],\n    centering: [2, 4],\n    tilemapLegend: {\n      '-': {\n        type: 'empty',\n        asset: 'tile5'\n      },\n      'b': {\n        type: 'placed',\n        tileId: 'blocking_rock'\n      },\n      'B': {\n        type: 'placed',\n        tileId: 'blocking_rock_2'\n      },\n      'w': {\n        type: 'placed',\n        tileId: 'trees_grass'\n      },\n      'W': {\n        type: 'placed',\n        tileId: 'lumberjack'\n      }\n    },\n    predialog: [\n      { talkerAsset: 'duck', talkerName: 'Duck Sr', side: 0, message: 'We have let our statistician analyze data from our newly founded city, and we have some news.' },\n      { talkerAsset: 'duck', talkerName: 'Duck Sr', side: 0, message: 'Good news is: We actually have zero percent homeless people!' },\n      { talkerAsset: 'duck', talkerName: 'Duck Sr', side: 0, message: 'Bad news are, we don\\t have any inhabitants.' },\n      { talkerAsset: 'snake', talkerName: 'Statistican Snake', side: 0, message: 'I usssed Python to analyze that!' },\n      { talkerAsset: 'duck', talkerName: 'Duck Sr', side: 0, message: 'Lets actually start building some houses, shall we?' },\n      { talkerAsset: 'penguin', talkerName: 'Penguin M.Sc.', side: 0, message: 'I\\'ll do Sir.' },\n    ]\n  },\n  {\n    id: 'campaign-0-4',\n    name: 'Sightseeing wonders',\n    author,\n    cards: ['castle_small', 'castle_small', 'arc', 'castle_big', 'camping', 'trees_grass', 'trees_grass', 'trees_grass', 'lumberjack'],\n    gamemode: 'emptycards',\n    backgroundColor: '#2ecc71',\n    iconAsset: 'tile158',\n    tilemap: [\n      '....p.....',\n      '...pb.....',\n      '..Bp---b..',\n      '.--v---B.b',\n      '-m---...--',\n      '--s..--m-.',\n      '.---....b.',\n      '..b----m..',\n    ],\n    centering: [2, 5],\n    tilemapLegend: {\n      '-': {\n        type: 'empty',\n        asset: 'tile5'\n      },\n      'b': {\n        type: 'placed',\n        tileId: 'blocking_rock'\n      },\n      'B': {\n        type: 'placed',\n        tileId: 'blocking_rock_2'\n      },\n      'w': {\n        type: 'placed',\n        tileId: 'trees_grass'\n      },\n      'm': {\n        type: 'placed',\n        tileId: 'preplaced_military_camp'\n      },\n      'p': {\n        type: 'placed',\n        tileId: 'preplaced_path_to_visitor_center'\n      },\n      'v': {\n        type: 'placed',\n        tileId: 'preplaced_visitor_center'\n      },\n      's': {\n        type: 'placed',\n        tileId: 'preplaced_mine_shaft'\n      }\n    },\n    extraTiles: [\n      {\n        id: 'preplaced_military_camp',\n        name: 'Military Camp',\n        description: 'A small military camp which is located here by the army. Sadly, we do not have the permissions to move it.',\n        assetName: 'tile96',\n        requirements: [],\n        grants: [\n          { resourceId: 'military', amount: 2 }\n        ]\n      },\n      {\n        id: 'preplaced_path_to_visitor_center',\n        name: 'Path',\n        description: 'A small path that leads from your town to the local visitor center.',\n        assetName: 'tile28',\n        requirements: [],\n        grants: []\n      },\n      {\n        id: 'preplaced_visitor_center',\n        name: 'Visitor Center',\n        description: 'A small building that attracts lots of tourists.',\n        assetName: 'tile130',\n        requirements: [],\n        grants: [\n          { resourceId: 'social', amount: 3 }\n        ]\n      },\n      {\n        id: 'preplaced_mine_shaft',\n        name: 'Mine Shaft',\n        assetName: 'tile160',\n        requirements: [],\n        grants: [\n          { resourceId: 'stone', amount: 3 }\n        ]\n      },\n    ],\n    predialog: [\n      { talkerAsset: 'owl', talkerName: 'Park Service Owl', side: 0, message: 'There is actually a large nature reserve close to to your town.' },\n      { talkerAsset: 'owl', talkerName: 'Park Service Owl', side: 0, message: 'We think it would be a good idea to build some sightseeing buildings to attract more tourists to our town.' },\n      { talkerAsset: 'owl', talkerName: 'Park Service Owl', side: 0, message: 'Unfortunately, there are some military camps constructed by the government.' },\n      { talkerAsset: 'owl', talkerName: 'Park Service Owl', side: 0, message: 'We might have to build around them.' },\n    ]\n  },\n  {\n    id: 'campaign-0-cityfill-0',\n    name: 'Fill the City',\n    backgroundColor: '#2ecc71',\n    author,\n    cards: [\n      'farm_fields', 'lumberjack', 'residential0', 'residential1', 'castle_small', 'castle_big', 'office_small', 'office_medium',\n      'shop0', 'shop1', 'waste_plant', 'church', 'camping', 'trees_grass', 'library', 'police',\n      'trees_grass', 'trees_grass', 'trees_grass', 'trees_grass', 'trees_grass',\n    ],\n    gamemode: 'cityfill',\n    iconAsset: '',\n    tilemap: [\n      '....b..-----..',\n      '.......B..b---',\n      '...----b..--..',\n      '.----.Ba----..',\n      '...b------....',\n      '.....B..b-----',\n    ],\n    tilemapLegend: {\n      '-': { type: \"empty\", asset: 'tile5' },\n      'a': { type: 'placed', tileId: 'preplaced_joker' },\n      'b': { type: 'placed', tileId: 'blocking_rock' },\n      'B': { type: 'placed', tileId: 'blocking_rock_2' },\n    },\n    centering: [3, 10],\n    extraTiles: [\n      {\n        id: 'preplaced_joker',\n        name: 'Joker',\n        grants: [\n          { resourceId: 'military', amount: 2 },\n          { resourceId: 'relaxing', amount: 2 },\n          { resourceId: 'social', amount: 2 },\n          { resourceId: 'stone', amount: 2 },\n          { resourceId: 'wood', amount: 2 },\n        ],\n        requirements: [],\n        assetName: 'tile93'\n      }\n    ],\n    predialog: [\n      { talkerAsset: 'walrus', talkerName: 'Van Walrus', side: 0, message: 'You did a great job preparing the city creation so far.' },\n      { talkerAsset: 'walrus', talkerName: 'Van Walrus', side: 0, message: 'We now want to start construction on a much larger pace.' },\n      { talkerAsset: 'penguin', talkerName: 'Penguin M.Sc.', side: 2, message: 'But it looks like I have way fewer cards to do so this time.' },\n      { talkerAsset: 'walrus', talkerName: 'Van Walrus', side: 0, message: 'This is a Fill-The-City level, your goal is not to get rid of all cards, but fill every free space on the map.' },\n      { talkerAsset: 'walrus', talkerName: 'Van Walrus', side: 0, message: 'You will always have exactly four cards on your hands. Every time you place a card, the leftmost card and the placed card will be removed and you will receive two new cards.' },\n      { talkerAsset: 'walrus', talkerName: 'Van Walrus', side: 0, message: 'Good luck!' },\n    ]\n  },\n  {\n    id: 'campaign-0-5',\n    name: 'Increasing Supplies',\n    backgroundColor: '#2ecc71',\n    author,\n    gamemode: 'emptycards',\n    iconAsset: '',\n    cards: ['trees_grass', 'trees_grass', 'rock_grass', 'rock_grass', 'residential1', 'farm_smelt', 'farm_fields', 'farm_fields', 'farm_fields', 'lumberjack', 'shop0', 'shop1'],\n    centering: [2, 6],\n    tilemap: [\n      'B...b.........',\n      '.--..---..b...',\n      '...b-.---...B.',\n      '..--.--B---...',\n      '...b..----....',\n      '..-------..b..',\n      '....--..B....B'\n    ],\n    tilemapLegend: {\n      '-': { type: \"empty\", asset: 'tile5' },\n      'b': { type: 'placed', tileId: 'blocking_rock' },\n      'B': { type: 'placed', tileId: 'blocking_rock_2' },\n    },\n    predialog: [\n      { talkerAsset: 'rabbit', talkerName: 'Senor Rabbit', side: 0, message: 'We have found that, even though we have functioning shops in our city, our supplies are alarmingly low.' },\n      { talkerAsset: 'rabbit', talkerName: 'Senor Rabbit', side: 0, message: 'Especially our carrots supplies.' },\n      { talkerAsset: 'rabbit', talkerName: 'Senor Rabbit', side: 0, message: 'Man I love carrots.' },\n      { talkerAsset: 'rabbit', talkerName: 'Senor Rabbit', side: 0, message: 'We need more resource supplies. Do something, now!' },\n    ]\n  },\n\n\n  {\n    id: 'campaign-0-1',\n    name: 'Empty',\n    backgroundColor: '#2ecc71',\n    author,\n    cards: [],\n    gamemode: 'emptycards',\n    iconAsset: '',\n    tilemap: [],\n    tilemapLegend: {}\n  },\n\n\n  {\n    id: 'fillthecity-sand',\n    name: 'Fill the Western',\n    backgroundColor: '#ccbf90',\n    author,\n    cards: [\n      'trees_sand', 'trees_sand', 'trees_sand', 'trees_sand',\n      'rock_sand', 'rock_sand',\n      'watertower', 'western_shop0', 'sheriff', 'sheriff', 'tipis', 'tipis', 'western_bank', 'saloon0', 'saloon1'\n    ],\n    gamemode: 'cityfill',\n    iconAsset: '',\n    tilemap: [\n      '..b.............b....--...',\n      'B...B-------..B...----B...',\n      '......b--------....B---...',\n      '..b----a---b..---....b....',\n      '.....B----B--b..-.....---b',\n      '........---...b-.---b.----',\n      '....B...b...B---..B-----..',\n      '.....B........-.....B---b.',\n    ],\n    tilemapLegend: {\n      '-': { type: \"empty\", asset: 'tile49' },\n      'a': { type: 'placed', tileId: 'preplaced_joker' },\n      'b': { type: 'placed', tileId: 'blocking_rock_sand' },\n      'B': { type: 'placed', tileId: 'blocking_rock_sand1' },\n    },\n    centering: [3, 8],\n    extraTiles: [\n      {\n        id: 'preplaced_joker',\n        name: 'Joker',\n        grants: [\n          { resourceId: 'military', amount: 2 },\n          { resourceId: 'social', amount: 2 },\n          { resourceId: 'stone', amount: 2 },\n          { resourceId: 'wood', amount: 2 },\n          { resourceId: 'agriculture', amount: 2 },\n        ],\n        requirements: [],\n        assetName: 'tile131'\n      }\n    ]\n  },\n  {\n    id: 'fillthecity-mars',\n    name: 'Fill the Mars',\n    backgroundColor: '#ab492f',\n    author,\n    cards: [\n      'mars_trees', 'mars_trees', 'mars_trees', 'mars_trees',\n      'mars_crystals', 'mars_crystals', 'mars_crystals',\n      'mars_crystal_rock',\n      'mars_rock0', 'mars_rock1',\n      'mars_residential0', 'mars_residential1',\n      'mars_construction', 'mars_factory', 'mars_ship', 'mars_fuelcrate', 'mars_rocket_hall', 'mars_food', 'mars_food'\n    ],\n    gamemode: 'cityfill',\n    iconAsset: '',\n    tilemap: [\n      '..b.............b....--...',\n      'B...B-------..B...----B...',\n      '......b--------....B---...',\n      '..b----a---b..---....b....',\n      '.....B----B--b..-.....---b',\n      '........---...b-.---b.----',\n      '....B...b...B---..B-----..',\n      '.....B........-.....B---b.',\n    ],\n    tilemapLegend: {\n      '-': { type: \"empty\", asset: 'tile66' },\n      'a': { type: 'placed', tileId: 'preplaced_joker' },\n      'b': { type: 'placed', tileId: 'blocking_rock_mars0' },\n      'B': { type: 'placed', tileId: 'blocking_rock_mars1' },\n    },\n    centering: [3, 8],\n    extraTiles: [\n      {\n        id: 'preplaced_joker',\n        name: 'Joker',\n        grants: [\n          { resourceId: 'military', amount: 2 },\n          { resourceId: 'crystal', amount: 2 },\n          { resourceId: 'extraterrestrial', amount: 2 },\n          { resourceId: 'fuel', amount: 2 },\n          { resourceId: 'agriculture', amount: 2 },\n        ],\n        requirements: [],\n        assetName: 'tile107'\n      }\n    ]\n  },\n\n\n  {\n    id: 'comingsoon',\n    name: 'Coming soon',\n    backgroundColor: '#2ecc71',\n    author,\n    cards: [],\n    gamemode: 'emptycards',\n    iconAsset: '',\n    tilemap: [],\n    tilemapLegend: {}\n  },\n  {\n    id: 'test-level',\n    name: 'Debug',\n    author,\n    cards: [\n      'office_small', 'shop0', 'church', 'joker', 'trees_grass', 'parking', 'fountain', 'trees_sand', 'military_rockets',\n      // 'camping', 'office_big', 'castle_big', 'castle_small', 'residential3'\n    ],\n    gamemode: 'emptycards',\n    iconAsset: 'tile5',\n    backgroundColor: '#2ecc71',\n    tilemap: [\n      '----bbb-',\n      '-b--b---',\n      '-b-b--b-',\n      '--b--b--',\n      '---bb---',\n      '--------',\n      '--------',\n      '--------',\n      '--------',\n      '--------',\n    ],\n    tilemapLegend: {\n      '-': {\n        type: 'empty',\n        asset: 'tile5'\n      },\n      'b': {\n        type: 'placed',\n        tileId: 'blocking_rock'\n      }\n    }\n  },\n];","export class HexagonPositioningService {\n  private static HEXAGON_UPPER_PART_PER_TOTAL_HEIGHT = 140 / 561;\n  private static HEXAGON_WIDTH_PER_HEIGHT = 480 / 561;\n\n  public static getTilePositioning(x: number, y: number, tileWidth: number = 128, border: number = 4): [number, number] {\n    const isEvenY = y % 2 === 0;\n    const tileHeight = this.getHeight(tileWidth);\n\n    const xPosition = y * (tileHeight + border - this.getUpperPartHeight(tileWidth));\n    const yPosition = x * (tileWidth + border) + (isEvenY ? - 2 : tileWidth / 2);\n\n    return [xPosition, yPosition];\n  }\n\n  public static getHitboxRectangleMetrics(tileWidth: number = 128): [number, number] {\n    const w = tileWidth;\n    const h = this.getHeight(tileWidth) * (1 - 2 * this.HEXAGON_UPPER_PART_PER_TOTAL_HEIGHT);\n\n    return [w, h];\n  }\n\n  public static getUpperPartHeight(tileWidth: number = 128): number {\n    return this.getHeight(tileWidth) * this.HEXAGON_UPPER_PART_PER_TOTAL_HEIGHT;\n  }\n\n  public static getHeight(tileWidth: number = 128): number {\n    return tileWidth / this.HEXAGON_WIDTH_PER_HEIGHT;\n  }\n\n  public static getNeighbourHexagonsCoordinates(x: number, y: number): Array<{x: number, y: number}> {\n    const unEvenOffset = y % 2 === 1 ? 1 : 0;\n\n    return [\n      { x: x - 1 + unEvenOffset, y: y - 1  },\n      { x: x + unEvenOffset, y: y - 1 },\n      { x: x - 1, y: y },\n      { x: x + 1, y: y },\n      { x: x - 1 + unEvenOffset, y: y + 1 },\n      { x: x + unEvenOffset, y: y + 1 }\n    ]\n  }\n}","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {useEffect, useRef, useState} from \"react\";\nimport Color from \"color\";\nimport {HexagonPositioningService} from \"../../utils/HexagonPositioningService\";\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n  },\n  innerContainer: {\n    width: `${window.innerWidth * 4}px`,\n    height: `${window.innerHeight * 4}px`,\n  }\n});\n\nexport const TileBoardContainer: React.FC<{\n  isDragging?: (isDragging: boolean) => void;\n  backgroundColor?: string;\n  initialCentering?: [number, number];\n}> = props => {\n  const backgroundColor = props.backgroundColor || '#eee';\n\n  useEffect(() => {\n    if (props.initialCentering && containerRef.current) {\n      const [xPos, yPos] = HexagonPositioningService.getTilePositioning(props.initialCentering[0], props.initialCentering[1]);\n      console.log(`Center on coords ${props.initialCentering}, position ${xPos}:${yPos}`);\n      containerRef.current.scrollTo(\n        xPos + 800 - containerRef.current.offsetWidth / 2,\n        yPos + 800 - containerRef.current.offsetHeight / 2,\n      )\n    }\n  }, [props.initialCentering]);\n\n  const onDrag = (x: number, y: number) => {\n    if (containerRef.current && dragStart) {\n      containerRef.current.scrollTo(\n        oldScroll[0] + dragStart[0] - x,\n        oldScroll[1] + dragStart[1] - y,\n      )\n    }\n  };\n\n  const [dragStart, setDragStart] = useState<null | [number, number]>(null);\n  const [oldScroll, setOldScroll] = useState<[number, number]>([0, 0]);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div\n      className={css(styles.container)}\n      style={{\n        background: `linear-gradient(350deg, ${Color(backgroundColor).darken(.1).string()} 0%,`\n          + ` ${Color(backgroundColor).darken(-.2).string()} 100%)`,\n        backgroundColor\n      }}\n      onMouseDown={e => {\n        if (e.button === 2) {\n          setOldScroll([containerRef.current!.scrollLeft, containerRef.current!.scrollTop])\n          setDragStart([e.clientX, e.clientY]);\n          if (props.isDragging) {\n            props.isDragging(true);\n          }\n        }\n      }}\n      onMouseUp={e => {\n        if (e.button === 2) {\n          setDragStart(null);\n          if (props.isDragging) {\n            props.isDragging(false);\n          }\n        }\n      }}\n      onMouseMove={e => !!dragStart && onDrag(e.clientX, e.clientY)}\n      onContextMenu={e => {\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      ref={containerRef}\n    >\n      <div className={css(styles.innerContainer)}>\n        {props.children}\n      </div>\n    </div>\n  )\n};\n","export interface IReduxState {\n  resources: IResource[];\n  board: IBoardState;\n  cards: ICardsState;\n  tiles: IAbstractTileInformation[];\n  color: string;\n  level: ILevel | undefined;\n  campaign: ICampaign | undefined;\n  dialogProgress: number;\n}\n\nexport interface IBoardState {\n  tiles: ISpecificTile[];\n}\n\nexport interface ICardsState {\n  hand: string[];\n  deck: string[];\n  selectedIndex?: number;\n}\n\nexport interface ISpecificTileMeta {\n  x: number;\n  y: number;\n  isHovering?: boolean;\n  isSelected?: boolean;\n}\n\nexport interface ISpecificPlacedTile extends ISpecificTileMeta {\n  type: 'placed';\n  abstractTile: IAbstractTileInformation;\n}\n\nexport interface ISpecificEmptyTile extends ISpecificTileMeta {\n  type: 'empty' | 'border';\n  asset: string;\n  resources: IAbstractTileInformationResourceInformation[];\n}\n\nexport type ISpecificTile = ISpecificPlacedTile | ISpecificEmptyTile;\n\nexport interface IAbstractTileInformation {\n  id: string;\n  name: string;\n  description?: string;\n  assetName: string;\n  costs?: number;\n  requirements: IAbstractTileInformationResourceRequirement[];\n  grants: IAbstractTileInformationResourceInformation[];\n  isCardSelected?: boolean;\n}\n\nexport interface IAbstractTileInformationResourceRequirement {\n  resourceId: string;\n  min?: number;\n  max?: number;\n}\n\nexport interface IAbstractTileInformationResourceInformation {\n  resourceId: string;\n  amount: number;\n}\n\nexport interface IResource {\n  id: string;\n  name: string;\n  description?: string;\n  assetName: string;\n  isPositive: boolean;\n  pointsMultiplier?: number;\n  defaultValue?: number;\n}\n\nexport enum ResourceMetricIntent {\n  DEFAULT,\n  TO_LOW_COUNT,\n  SUFFICIENT\n}\n\nexport enum AssetSize {\n  x4,\n  x3,\n  x2,\n  x1,\n  x1dot5,\n  x0dot75,\n  x0dot5,\n  svg\n}\n\nexport interface ILevel {\n  id: string;\n  author: ILevelAuthor;\n  name: string;\n  iconAsset: string;\n  gamemode: 'cityfill' | 'emptycards' | 'sandbox';\n  tilemap: string[];\n  tilemapLegend: {\n    [key: string]:\n        { type: 'empty', asset: string, resources?: IAbstractTileInformationResourceInformation[] }\n      | { type: 'placed', tileId: string };\n  };\n  centering?: [number, number];\n  extraTiles?: IAbstractTileInformation[];\n  backgroundColor?: string;\n  primaryColor?: string;\n  cards: string[];\n  predialog?: IDialogMessage[];\n  postdialog?: IDialogMessage[];\n}\n\nexport interface ILevelAuthor {\n  name: string;\n  website?: string;\n  image?: string;\n  repo?: string;\n}\n\nexport interface IDialogMessage {\n  talkerName: string;\n  talkerAsset: string;\n  message: string;\n  side: 0 | 1 | 2;\n}\n\nexport interface ICampaign {\n  id: string;\n  name: string;\n  author: ILevelAuthor;\n  backgroundColor?: string;\n  tilemap: string[];\n  tilemapLegend: {\n    [key: string]: {\n      asset: string;\n      levelId: string;\n      requires: string[];\n    }\n  };\n  centering?: [number, number];\n}\n","import {AssetSize} from \"../types\";\n\nexport class AssetService {\n  public static getTileUrl(assetName: string, size: AssetSize = AssetSize.x4) {\n    return this.getUrl(assetName, 'tile', size);\n  }\n\n  public static getObjectUrl(assetName: string, size: AssetSize = AssetSize.x4) {\n    return this.getUrl(assetName, 'object', size);\n  }\n\n  private static getUrl(assetName: string, tileOrObject: 'tile' | 'object', size: AssetSize) {\n    return `./assets/${tileOrObject === 'tile' ? 'tiles' : 'objects'}/${this.getSizeText(size)}/`\n      + `${assetName}${this.getSizeFileSuffix(size)}${this.getFileEnding(size)}`;\n  }\n\n  private static isSvg(size: AssetSize) {\n    return size === AssetSize.svg;\n  }\n\n  private static getSizeText(size: AssetSize) {\n    switch (size) {\n      case AssetSize.x4:\n        return '4x';\n      case AssetSize.x3:\n        return '3x';\n      case AssetSize.x2:\n        return '2x';\n      case AssetSize.x1:\n        return '1x';\n      case AssetSize.x1dot5:\n        return '1.5x';\n      case AssetSize.x0dot75:\n        return '0.75x';\n      case AssetSize.x0dot5:\n        return '0.5x';\n      case AssetSize.svg:\n        return 'SVG';\n    }\n  }\n\n  private static getSizeFileSuffix(size: AssetSize) {\n    return this.isSvg(size) ? '' : '@' + this.getSizeText(size);\n  }\n\n  private static getFileEnding(size: AssetSize) {\n    return this.isSvg(size) ? '.svg' : '.png';\n  }\n}","import {\n  IAbstractTileInformation, IAbstractTileInformationResourceInformation,\n  IReduxState,\n  IResource,\n  ISpecificPlacedTile,\n  ISpecificTile\n} from \"../types\";\nimport {HexagonPositioningService} from \"../utils/HexagonPositioningService\";\n\nexport const getCards = (state: IReduxState): IAbstractTileInformation[] => {\n  return state.cards.hand\n    .map(id => [...state.tiles, ...(state.level ? (state.level!.extraTiles || []) : [])].find(r => r.id === id))\n    .map(card => !card ? (() => { console.log(state.cards.hand); throw Error(`Tile not found`);  })() : card!)\n    .map((card, idx) => idx === state.cards.selectedIndex ? { ...card, isCardSelected: true } : card);\n};\n\nexport const getSelectedCard = (state: IReduxState): IAbstractTileInformation | undefined => {\n  return getCards(state).filter(card => card.isCardSelected)[0];\n};\n\nexport const getResource = (state: IReduxState, resourceId: string): IResource => {\n  const resource = state.resources.find(r => r.id === resourceId);\n\n  if (!resource) {\n    throw Error(`Could not find resource with ID ${resourceId}, registered resources`\n      + ` are ${state.resources.map(r => r.id).join(', ')}`);\n  }\n\n  return resource;\n};\n\nexport const getHoveredTile = (state: IReduxState): ISpecificTile | undefined => {\n  return state.board.tiles.find(t => t.isHovering);\n};\n\nexport const getBoardTile = (state: IReduxState, x: number, y: number): ISpecificTile | undefined => {\n  return state.board.tiles.find(tile => tile.x === x && tile.y === y);\n};\n\nexport const getBoardTiles = (state: IReduxState) => {\n  const tiles = state.board.tiles.map(tile => {\n    if (tile.type === \"empty\") {\n      const resources = HexagonPositioningService\n        .getNeighbourHexagonsCoordinates(tile.x, tile.y)\n        .map(({x, y}) => getBoardTile(state, x, y))\n        .filter(tile => tile && tile.type === \"placed\")\n        .map(tile => tile as ISpecificPlacedTile)\n        .map(tile => tile.abstractTile.grants)\n        .reduce((a, b) => [...a, ...b], [])\n        .reduce<IAbstractTileInformationResourceInformation[]>(((resources, nextResource) => {\n          if (resources.find(r => r.resourceId === nextResource.resourceId)) {\n            return resources.map(r =>\n              r.resourceId === nextResource.resourceId\n                ? { ...r, amount: r.amount + nextResource.amount }\n                : r\n            );\n          } else {\n            return [...resources, nextResource];\n          }\n        }), []);\n      tile.resources = resources;\n    }\n\n    return tile;\n  });\n\n  return tiles;\n};\n\nexport const getCurrentDialogMessage = (state: IReduxState) => {\n  return !state.level\n    ? undefined\n    : (state.level.predialog || []).length > state.dialogProgress\n      ? (state.level.predialog || [])[state.dialogProgress]\n      : (state.level.postdialog || []).length > state.dialogProgress - (state.level.predialog || []).length\n        ? (state.level.postdialog || [])[state.dialogProgress - (state.level.predialog || []).length]\n        : undefined;\n};\n\nexport const getPreDialogIndex = (state: IReduxState) => {\n  return Math.min(state.dialogProgress, !state.level ? 0 : (state.level.predialog || []).length - 1);\n};\n\nexport const getPostDialogIndex = (state: IReduxState) => {\n  return Math.min(\n    state.dialogProgress - (!state.level ? [] : state.level.predialog || []).length,\n    !state.level ? 0 : (state.level.postdialog || []).length - 1\n  );\n};\n\nexport const isPreDialogFinished = (state: IReduxState) => {\n  return !state.level ? true : getPreDialogIndex(state) >= (state.level.predialog || []).length - 1;\n};\n\nexport const isPostDialogFinished = (state: IReduxState) => {\n  return !state.level ? true : getPostDialogIndex(state) >= (state.level.postdialog || []).length - 1;\n};\n\n\n","import {\n  IAbstractTileInformation,\n  IAbstractTileInformationResourceInformation,\n  IResource\n} from \"../types\";\n\n/**\n *\n * @param allResources defined for the entire game.\n * @param tileResources\n * @param card\n * @returns list of resource IDs from resources that the tile does not have enough to satisfy the cards requirements.\n * @returns an empty array if the tile satisfies the cards requirements.\n */\nexport const testRequirements = (\n  allResources: IResource[],\n  tileResources: IAbstractTileInformationResourceInformation[],\n  card: IAbstractTileInformation\n): string[] => {\n  const insufficientResourceIds: string[] = [];\n\n  const getResourceMetricFromTile = (resourceId: string): IAbstractTileInformationResourceInformation => {\n    let result = tileResources.find(tr => tr.resourceId === resourceId);\n\n    if (!!result) {\n      return result;\n    } else {\n      let result = allResources.find(tr => tr.id === resourceId);\n\n      if (!!result) {\n        return { resourceId, amount: result.defaultValue || 0 };\n      } else {\n        throw Error(`Could not find resource with ID ${resourceId}.`);\n      }\n    }\n  };\n\n  for (let resourceRequirement of card.requirements) {\n    const { amount } = getResourceMetricFromTile(resourceRequirement.resourceId);\n    if ( (resourceRequirement.min !== undefined && resourceRequirement.min > amount)\n      || (resourceRequirement.max !== undefined && resourceRequirement.max < amount) ) {\n      insufficientResourceIds.push(resourceRequirement.resourceId);\n    }\n  }\n\n  return insufficientResourceIds;\n};\n","export default class UrlRoutingService {\n  public static setCampaign(id: string) {\n    window.location.hash = `${id}`;\n  }\n\n  public static setLevel(levelId: string, campaignId?: string) {\n    const capamignIdSure = campaignId || this.getCampaign() || '-';\n\n    window.location.hash = `${capamignIdSure}/${levelId}`;\n  }\n\n  public static getCampaign() {\n    if (window.location.hash !== '' && !!this.getPieces()[0] && this.getPieces()[0] !== '-') {\n      return this.getPieces()[0];\n    }\n  }\n\n  public static getLevel() {\n    if (window.location.hash !== '' && !!this.getPieces()[1]) {\n      return this.getPieces()[1];\n    }\n  }\n\n  private static getPieces() {\n    const pieces = window.location.hash.split('/');\n    console.log(pieces);\n    return pieces;\n  }\n}","import {useDispatch, useMappedState} from \"redux-react-hook\";\nimport {IReduxState} from \"./types\";\nimport {getBoardTile, getBoardTiles, getCards, getSelectedCard} from \"./state/filters\";\nimport {testRequirements} from \"./utils/testRequirements\";\nimport {RemoveCardFromIndex, TakeCardFromDeck} from \"./state/cards\";\nimport {PlaceTile} from \"./state/board\";\nimport {useEffect} from \"react\";\nimport UrlRoutingService from \"./utils/UrlRoutingService\";\n\nexport const usePrimaryColor = () => {\n  return useMappedState((state: IReduxState) => ({\n    color: state.color\n  })).color;\n};\n\nexport const useBackgroundColor = () => {\n  return useMappedState((state: IReduxState) => ({\n    color: state.level && state.level.backgroundColor\n  })).color;\n};\n\nexport const useBuyTile = (x: number, y: number): () => void => {\n  const { card, allResources, tile, selectedCardIndex, gameMode } = useMappedState((state: IReduxState) => ({\n    card: getSelectedCard(state),\n    allResources: state.resources,\n    tile: getBoardTile(state, x, y),\n    selectedCardIndex: state.cards.selectedIndex,\n    gameMode: state.level ? state.level.gamemode : 'emptycards'\n  }));\n  const dispatch = useDispatch();\n\n  const canBuy = selectedCardIndex !== undefined && card && tile && tile.type === \"empty\"\n    && testRequirements(allResources, tile.resources, card).length === 0;\n\n  return () => {\n    if (canBuy) {\n      switch (gameMode) {\n        case \"cityfill\":\n          dispatch(RemoveCardFromIndex.create({ cardIndex: selectedCardIndex! }));\n          dispatch(PlaceTile.create({ abstractTile: card!, x, y }));\n          dispatch(RemoveCardFromIndex.create({ cardIndex: 0 }));\n          dispatch(TakeCardFromDeck.create({ count: 2 }));\n          break;\n        case \"emptycards\":\n          dispatch(RemoveCardFromIndex.create({ cardIndex: selectedCardIndex! }));\n          dispatch(PlaceTile.create({ abstractTile: card!, x, y }));\n          break;\n        case \"sandbox\":\n          dispatch(PlaceTile.create({ abstractTile: card!, x, y }));\n          break;\n\n      }\n    }\n  };\n};\n\nexport const useUrlRouting = (options: {\n  campaignId?: string;\n  levelId?: string;\n}) => {\n  useEffect(() => {\n    if (options.levelId && options.campaignId) {\n      UrlRoutingService.setLevel(options.levelId, options.campaignId);\n    } else if (options.campaignId) {\n      UrlRoutingService.setCampaign(options.campaignId);\n    } else if (options.levelId) {\n      UrlRoutingService.setLevel(options.levelId);\n    }\n  }, [options.campaignId, options.levelId]);\n};\n\nexport const useCheckWin = () => {\n  const { gameMode, cards, tiles } = useMappedState((state: IReduxState) => ({\n    gameMode: state.level ? state.level.gamemode : 'sandbox',\n    cards: getCards(state),\n    tiles: getBoardTiles(state)\n  }));\n\n  if (gameMode === \"cityfill\") {\n    return tiles.map(tile => tile.type !== \"empty\").reduce((a, b) => a && b, true);\n  } else if (gameMode === \"emptycards\") {\n    return cards.length === 0;\n  }\n}\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {AssetService} from \"../../utils/AssetService\";\nimport {\n  IAbstractTileInformationResourceInformation,\n  IAbstractTileInformationResourceRequirement,\n  IReduxState, ResourceMetricIntent\n} from \"../../types\";\nimport {useMappedState} from \"redux-react-hook\";\nimport {getResource} from \"../../state/filters\";\n\nconst styles = StyleSheet.create({\n  container: {\n    lineHeight: '20px',\n    fontWeight: 'bold'\n  },\n  imageContainer: {\n    display: 'inline-block',\n    width: '30px',\n    textAlign: 'center'\n  },\n  image: {\n    height: '20px',\n    verticalAlign: 'middle'\n  },\n  metricName: {\n    marginRight: '4px'\n  },\n  metricValue: {\n    /*display: 'inline-block',\n    width: '25px',\n    textAlign: 'right'*/\n  },\n  positiveIntent: {\n    color: '#2ecc71'\n  },\n  negativeIntent: {\n    color: '#e74c3c'\n  }\n});\n\nexport const MetricText: React.FC<{\n  resourceInformation: IAbstractTileInformationResourceInformation | IAbstractTileInformationResourceRequirement;\n  textColor?: string;\n  inTile?: boolean;\n  intent?: ResourceMetricIntent;\n  longText?: boolean;\n}> = props => {\n  const { resource } = useMappedState((state: IReduxState) => ({\n    resource: getResource(state, props.resourceInformation.resourceId)\n  }));\n\n  const amount = (() => {\n    if ((props.resourceInformation as IAbstractTileInformationResourceInformation).amount !== undefined) {\n      const amount = (props.resourceInformation as IAbstractTileInformationResourceInformation).amount;\n\n      return (amount < 0 ? '-' : '+') + Math.abs(amount);\n    } else {\n      const asReq = props.resourceInformation as IAbstractTileInformationResourceRequirement;\n      if (asReq.min !== undefined && asReq.max !== undefined) {\n        return `${asReq.min} - ${asReq.max}`;\n      } else if (asReq.min !== undefined) {\n        return `${asReq.min}${props.longText ? ' or more' : '+'}`;\n      } else if (asReq.max !== undefined) {\n        return `${asReq.max}${props.longText ? ' or less' : '-'}`;\n      } else {\n        throw Error(`No resource amount information supplied in resource requirements: ${JSON.stringify(asReq)}`);\n      }\n    }\n  })();\n\n  const textColor = (() => {\n    switch (props.intent) {\n      case ResourceMetricIntent.DEFAULT:\n        return props.textColor;\n      case ResourceMetricIntent.TO_LOW_COUNT:\n        return '#e74c3c';\n      case ResourceMetricIntent.SUFFICIENT:\n        return props.textColor; // '#2ecc71';\n      default:\n        return props.textColor\n    }\n  })();\n\n  return (\n    <div\n      className={css(\n        styles.container,\n        /*props.metricIntent > 0 && styles.positiveIntent,\n        props.metricIntent < 0 && styles.negativeIntent*/\n      )}\n      style={{ color: textColor }}\n      title={resource.name}\n    >\n      <div className={css(styles.imageContainer)}>\n        <img\n          src={AssetService.getObjectUrl(resource.assetName)}\n          className={css(styles.image)}\n          alt={'Resource icon'}\n        />\n      </div>\n      <span className={css(styles.metricValue)}>\n        { props.longText && resource.name + ': ' }\n        { /*props.metricIntent > 0 && '+' }\n        { props.metricIntent < 0 && '-'*/ }\n        { amount }\n      </span>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  text: {\n    // fontSize: '1.2em',\n    textShadow: '2px 2px 1px black',\n    fontFamily: '\"Pacifico\", cursive',\n    lineHeight: '.8em'\n  },\n  bigText: {\n    textShadow: '2px 6px 1px black',\n  }\n});\n\nexport const EmphasizedText: React.FC<{\n  text?: string;\n  color?: string;\n  fontSize?: number;\n  lineHeight?: number;\n}> = props => {\n  return (\n    <span\n      className={css(styles.text, (props.fontSize || 1) > 2 && styles.bigText)}\n      style={{\n        color: props.color || '#fff',\n        fontSize: `${props.fontSize || 1}em`,\n      }}\n    >\n      { props.children }\n      { props.text }\n    </span>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {IAbstractTileInformation} from \"../../types\";\nimport {AssetService} from \"../../utils/AssetService\";\nimport Color from 'color';\nimport {usePrimaryColor} from \"../../hooks\";\nimport {MetricText} from \"../commonui/MetricText\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\n\nconst sizes = {\n  bottomBarHeight: 240,\n  cardTopOffset: 30,\n  cardIconTopOffset: 50,\n  cardIconWidth: 120,\n  cardWidth: 160,\n  cardLeftMargin: 20,\n  countTopOffset: 50\n};\n\nconst px = (value: number) => `${value}px`;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'inline-block',\n    position: 'relative',\n    width: px(sizes.cardWidth),\n    height: px(sizes.bottomBarHeight + sizes.cardTopOffset),\n    marginLeft: px(sizes.cardLeftMargin),\n    // marginTop: px(-sizes.cardTopOffset),\n    textAlign: 'center',\n    overflowX: 'visible',\n  },\n  innerContainer: {\n    position: 'absolute',\n    top: px(-sizes.cardTopOffset),\n    bottom: 0,\n    width: px(sizes.cardWidth),\n    borderRadius: '40px 40px 0 0',\n    zIndex: 500,\n    transition: 'all .1s ease',\n\n    ':hover': {\n      top: px(-sizes.cardTopOffset - 20),\n    }\n  },\n  innerContainerSelected: {\n    top: px(-sizes.cardTopOffset - 25),\n\n    ':hover': {\n      top: px(-sizes.cardTopOffset - 25),\n    }\n  },\n  countContainer: {\n    position: 'absolute',\n    top: px(-sizes.countTopOffset),\n    right: 0,\n    zIndex: 510\n  },\n  image: {\n    width: px(sizes.cardIconWidth),\n    marginTop: px(-sizes.cardIconTopOffset),\n    zIndex: 500,\n  },\n  title: {\n    margin: '0 20px',\n    marginTop: '-40px',\n    lineHeight: '1.1em',\n  },\n  resourceListTitle: {\n    fontWeight: 'bold',\n    fontSize: '1em',\n    marginBottom: '.6em'\n  },\n  textContainer: {\n    display: 'flex',\n    width: px(sizes.cardWidth),\n  },\n  resourcesColumn: {\n    flexGrow: 1,\n    padding: '10px'\n  }\n});\n\nexport const BottomBarCard: React.FC<{\n  tile: IAbstractTileInformation;\n  onSelect: () => void;\n  isSelected: boolean;\n  cardCount: number;\n}> = props => {\n  const primaryColor = usePrimaryColor();\n  const shadedColor = (ratio: number) => Color(primaryColor).darken(ratio).string();\n\n  return (\n    <div\n      className={css(styles.container)}\n    >\n      {\n        props.cardCount && props.cardCount > 1 && (\n          <div className={css(styles.countContainer)}>\n            <EmphasizedText fontSize={2.4} text={`${props.cardCount}x`}/>\n          </div>\n        )\n      }\n\n      <div\n        className={css(styles.innerContainer, props.tile.isCardSelected && styles.innerContainerSelected)}\n        style={{\n          backgroundColor: props.tile.isCardSelected\n            ? shadedColor(.2)\n            : shadedColor(.1),\n          cursor: !props.tile.isCardSelected ? 'pointer' : undefined,\n          boxShadow: `7px 14px 1px ${Color(primaryColor).darken(.4).string()}`\n        }}\n        onClick={props.onSelect}\n      >\n        <img\n          src={AssetService.getTileUrl(props.tile.assetName)}\n          className={css(styles.image)}\n          alt={props.tile.assetName}\n        />\n\n        <div\n          className={css(styles.title)}\n          style={{ color: shadedColor(.4) }}\n        >\n          <EmphasizedText text={props.tile.name} fontSize={1.4} />\n        </div>\n\n        <div className={css(styles.textContainer)}>\n          <div className={css(styles.resourcesColumn)}>\n            <div className={css(styles.resourceListTitle)} style={{ color: shadedColor(.65) }}>\n              Requires\n            </div>\n\n            {\n              props.tile.requirements.length === 0\n                ? 'Nothing'\n                : props.tile.requirements.map(r => (\n                  <MetricText\n                    key={r.resourceId}\n                    resourceInformation={r}\n                    textColor={shadedColor(.5)}\n                  />\n                ))\n            }\n          </div>\n          <div className={css(styles.resourcesColumn)}>\n            <div className={css(styles.resourceListTitle)} style={{ color: shadedColor(.65) }}>\n              Grants\n            </div>\n\n            {\n              props.tile.grants.length === 0\n                ? 'Nothing'\n                : props.tile.grants.map(r => (\n                  <MetricText\n                    key={r.resourceId}\n                    resourceInformation={r}\n                    textColor={shadedColor(.6)}\n                  />\n                ))\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {BottomBarCard} from \"./BottomBarCard\";\nimport {useDispatch, useMappedState} from \"redux-react-hook\";\nimport {IAbstractTileInformation, IReduxState} from \"../../types\";\nimport {getCards} from \"../../state/filters\";\nimport {SelectCard} from \"../../state/cards\";\nimport {useCheckWin, usePrimaryColor} from \"../../hooks\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\nimport {LoadLevel} from \"../../state/level\";\n\nconst styles = StyleSheet.create({\n  container: {\n    /*position: 'fixed',\n    bottom: 0,\n    left: 0,*/\n    width: '100%',\n    height: '240px',\n    minHeight: '240px'\n  },\n  winContainer: {\n    textAlign: 'center',\n    margin: '2.4em'\n  },\n  winBackLink: {\n    display: 'inline-block',\n    paddingBottom: '10px',\n    borderBottom: '8px solid #fff',\n    transition: 'all .15s ease',\n    cursor: 'pointer',\n\n    ':hover': {\n      paddingBottom: '4px'\n    }\n  }\n});\n\nexport const BottomBar: React.FC<{}> = props => {\n  const { cards } = useMappedState((state: IReduxState) => ({\n    cards: getCards(state)\n  }));\n  const dispatch = useDispatch();\n  const selectCard = (cardIndex: number) => dispatch(SelectCard.create({ cardIndex }));\n  const backgroundColor = usePrimaryColor();\n  const hasWon = useCheckWin();\n  const onBack = () => dispatch(LoadLevel.create({}));\n\n  const cardsReduced = (() => {\n    const reduced: Array<{ card: IAbstractTileInformation, count: number, idx: number }> = [];\n\n    for (let i = 0; i < cards.length; i++) {\n      if (i >= 1 && cards[i - 1].id === cards[i].id) {\n        reduced[reduced.length - 1].count++;\n      } else {\n        reduced.push({ card: cards[i], count: 1, idx: i });\n      }\n    }\n\n    return reduced;\n  });\n\n  return (\n    <div className={css(styles.container)} style={{ backgroundColor }}>\n\n      {\n        hasWon\n          ? (\n            <div className={css(styles.winContainer)}>\n              <p>\n                <EmphasizedText fontSize={6} text={'Level complete!'}/>\n              </p>\n              <div className={css(styles.winBackLink)} onClick={onBack}>\n                <EmphasizedText fontSize={3} text={'Back to Campaign'}/>\n              </div>\n            </div>\n          ) : (\n            cardsReduced().map((card, index) => (\n              <BottomBarCard tile={card.card} onSelect={() => selectCard(card.idx)} isSelected={!!card.card.isCardSelected} cardCount={card.count} />\n            ))\n          )\n      }\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {usePrimaryColor} from \"../../hooks\";\nimport Color from 'color';\nimport {useState} from \"react\";\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    display: 'inline-block',\n    position: 'relative',\n    margin: '10px'\n  },\n  buttonContainerSmall: {\n    margin: '3px'\n  },\n  pseudoButton: {\n    padding: '.5em .7em',\n    borderRadius: '1em',\n    fontSize: '1.2em',\n    opacity: 0,\n    zIndex: -1,\n    fontFamily: '\"Pacifico\", cursive'\n  },\n  button: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    border: 0,\n    padding: '.5em .7em',\n    borderRadius: '1em',\n    fontSize: '1.2em',\n    textShadow: '2px 2px 1px black',\n    fontFamily: '\"Pacifico\", cursive',\n    cursor: 'pointer',\n    transition: 'all .1s ease',\n\n    ':active': {\n      // margin: '16px 7px 4px 13px',\n      marginTop: '6px',\n      marginBottom: '-6px',\n      boxShadow: '0px 0px 1px black',\n      transition: 'none',\n    },\n\n    ':focus': {\n      outline: 'none'\n    }\n  },\n  buttonHovering: {\n\n  },\n  buttonSmall: {\n    padding: '.3em .5em',\n    margin: '6px',\n    borderRadius: '.5em',\n    fontSize: '1em',\n  }\n});\n\nexport const Button: React.FC<{\n  color?: string;\n  fill?: boolean;\n  onClick?: () => void;\n  small?: boolean;\n}> = props => {\n  const [isHovering, setIsHovering] = useState(false);\n  const primaryColor = usePrimaryColor();\n  const color = props.color || primaryColor;\n\n  const shade = (ratio: number) => Color(color).lighten(ratio).string();\n\n  const backgroundColor = shade(isHovering ? -.4 : -.2);\n  const textColor = shade(isHovering ? .3 : .6);\n\n  return (\n    <div className={css(styles.buttonContainer, props.small && styles.buttonContainerSmall)}>\n      <div className={css(styles.pseudoButton)}>\n        { props.children }\n      </div>\n      <button\n        className={css(\n          styles.button,\n          isHovering && styles.buttonHovering,\n          props.small && styles.buttonSmall\n        )}\n        style={{ backgroundColor, color: textColor, boxShadow: `3px 6px 1px ${shade(-.6)}` }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n        onClick={props.onClick || (() => {})}\n      >\n        { props.children }\n      </button>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {usePrimaryColor} from \"../../hooks\";\nimport Color from \"color\";\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    padding: '10px',\n    borderRadius: '8px'\n  },\n  containerLeft: {\n    margin: '5px 5px 15px 40px',\n    paddingRight: '50px',\n    textAlign: 'right'\n  },\n  containerRight: {\n    margin: '5px 40px 15px 5px',\n    paddingLeft: '50px',\n    textAlign: 'left'\n  },\n  containerCenter: {\n    margin: '15px 15px 25px 15px',\n    textAlign: 'center'\n  },\n  avatar: {\n    position: 'absolute',\n    top: '10px',\n    width: '32px'\n  },\n  avatarLeft: {\n    right: '10px'\n  },\n  avatarRight: {\n    left: '10px'\n  },\n  personName: {\n    marginTop: '-25px',\n    fontSize: '1.2em',\n    color: '#fff',\n    textShadow: '2px 2px 1px black',\n    fontFamily: '\"Pacifico\", cursive',\n  }\n});\n\nexport const Message: React.FC<{\n  avatarAsset?: string;\n  title?: string;\n  backgroundColor?: string;\n  side?: 'left' | 'right';\n  entryAnimation?: boolean;\n}> = props => {\n  const primaryColor = usePrimaryColor();\n  const color = props.backgroundColor || primaryColor;\n\n  const shade = (ratio: number) => Color(color).lighten(ratio).string();\n\n  return (\n    <div\n      className={[\n        css(\n          styles.container,\n          props.side === \"left\" && styles.containerLeft,\n          props.side === \"right\" && styles.containerRight,\n          !props.side && styles.containerCenter\n        ),\n        // props.side === 'left' && props.entryAnimation ? 'animated bounceInRight' : '',\n        // props.side === 'right' && props.entryAnimation ? 'animated bounceInLeft' : '',\n      ].join(' ')}\n      style={{\n        backgroundColor: shade(.3),\n        color: shade(-.6),\n        boxShadow: `3px 6px 1px ${shade(-.2)}`\n      }}\n    >\n      {\n        props.avatarAsset && (\n          <img\n            src={`./assets/avatars/${props.avatarAsset}.png`}\n            alt={props.title}\n            className={css(\n              styles.avatar,\n              props.side === \"left\" && styles.avatarLeft,\n              props.side === \"right\" && styles.avatarRight\n            )}\n          />\n        )\n      }\n\n      {\n        props.title && (\n          <div className={css(styles.personName)}>\n            { props.title }\n            { props.avatarAsset && ':' }\n          </div>\n        )\n      }\n\n      { props.children }\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {Message} from \"../commonui/Message\";\nimport {IDialogMessage, IReduxState} from \"../../types\";\n// import {useEffect} from \"react\";\nimport {/*useDispatch, */useMappedState} from \"redux-react-hook\";\nimport {\n  getCurrentDialogMessage,\n  getPreDialogIndex,\n} from \"../../state/filters\";\n// import {NextDialogMessage} from \"../../state/dialogProgress\";\n\nexport const LevelDialog: React.FC<{\n  preDialog: IDialogMessage[];\n  postDialog: IDialogMessage[];\n}> = props => {\n  // const dispatch = useDispatch();\n\n  const {\n    /*preDialogIndex, nextMessage, */gameMode\n  } = useMappedState((state: IReduxState) => ({\n    preDialogIndex: getPreDialogIndex(state),\n    nextMessage: getCurrentDialogMessage(state),\n    gameMode: state.level ? state.level.gamemode : 'cityfill'\n  }));\n\n  /*useEffect(() => {\n    if (nextMessage) {\n      setTimeout(() => {\n        dispatch(NextDialogMessage.create({}));\n      }, nextMessage.message.length * 70);\n    }\n  }, [preDialogIndex]);*/\n\n  return (\n    <>\n      {\n        (props.preDialog || [])\n          // .filter((m, i) => i <= preDialogIndex)\n          .map((msg, i) => (\n            <Message\n              side={msg.side === 0 ? \"left\" : msg.side === 2 ? \"right\" : undefined}\n              title={msg.talkerName}\n              avatarAsset={msg.talkerAsset}\n              /*entryAnimation={i === preDialogIndex}*/\n            >\n              { msg.message }\n            </Message>\n          ))\n      }\n\n      <Message>\n        {\n          gameMode === 'cityfill' ? 'Complete the level by filling every available spot on the map!'\n            : gameMode === 'emptycards' ? 'Complete the level by placing all your cards!'\n              : gameMode === 'sandbox' ? 'Have fun!'\n              : ''\n        }\n\n      </Message>\n    </>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {useDispatch, useMappedState} from \"redux-react-hook\";\nimport {IReduxState} from \"../../types\";\nimport {Button} from \"../commonui/Button\";\nimport {loadLevel} from \"../../utils/loadLevel\";\nimport {LoadLevel} from \"../../state/level\";\nimport {ResetCards} from \"../../state/cards\";\nimport {LevelDialog} from \"./LevelDialog\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  grow: {\n    flexGrow: 1,\n    paddingBottom: '50px',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    width: '100%',\n  },\n  footer: {\n    marginBottom: '2em'\n  },\n  header: {\n    margin: '2em 2em 0 2em'\n  }\n});\n\nexport const LevelInformation: React.FC<{}> = props => {\n  const dispatch = useDispatch();\n  const { level } = useMappedState((state: IReduxState) => ({\n    level: state.level!\n  }));\n\n  const onLeaveLevel = () => {\n    dispatch(ResetCards.create({}));\n    dispatch(LoadLevel.create({}));\n  };\n\n  const onRestart = () => {\n    dispatch(ResetCards.create({}));\n    dispatch(LoadLevel.create({}));\n    setTimeout(() => loadLevel(level, dispatch), 0);\n  };\n\n  if (!level) {\n    return <span></span>;\n  }\n\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.grow)}>\n        {/*<h1 className={css(styles.header)}>{ level.name }</h1>*/}\n        <div className={css(styles.header)}>\n          <EmphasizedText text={level.name} fontSize={3} />\n        </div>\n\n        <Button onClick={onLeaveLevel}>Leave</Button>\n        <Button onClick={onRestart}>Restart Level</Button>\n        <br />\n\n        <LevelDialog\n          preDialog={level.predialog || []}\n          postDialog={level.postdialog || []}\n        />\n      </div>\n      {/*<div className={css(styles.footer)}>\n        <Message title={'Level designed by'}>\n          { level.author.name }<br />\n          <Button small={true}>Website</Button>\n          <Button small={true}>Repo</Button>\n        </Message>\n      </div>*/}\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {HexagonPositioningService} from \"../../utils/HexagonPositioningService\";\nimport {useState} from \"react\";\nimport {ISpecificTile} from \"../../types\";\nimport {AssetService} from \"../../utils/AssetService\";\n\nconst styles = StyleSheet.create({\n  containerAbsolutePositioning: {\n    position: 'absolute',\n    zIndex: 450\n  },\n  containerNoAbsolutePositioning: {\n    zIndex: 450\n  },\n  hitBoxes: {\n    zIndex: 300,\n    position: 'relative',\n    /*':hover div': {\n      borderLeft: '3px solid black',\n      borderRight: '3px solid black'\n    },*/\n  },\n  hitBox: {\n    position: 'absolute',\n    top: HexagonPositioningService.getUpperPartHeight(),\n    width: HexagonPositioningService.getHitboxRectangleMetrics()[0],\n    height: HexagonPositioningService.getHitboxRectangleMetrics()[1]\n  },\n  imageContainer: {\n    position: 'relative'\n  },\n  image: {\n    // width: '128px',\n    position: 'absolute',\n    zIndex: 180,\n    transition: 'all .15s ease'\n  },\n  // imageHovered: {\n  //   width: '116px',\n  //   top: 6,\n  //   left: 6\n  // },\n  textContainer: {\n    // width: '128px',\n    height: HexagonPositioningService.getHeight(128) + 'px',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 200\n  }\n});\n\nexport const Tile: React.FC<{\n  onHover: (isHovered: boolean) => void;\n  onClick: () => void;\n  tile: ISpecificTile;\n  noAbsolutePositioning?: boolean;\n  noOffset?: boolean;\n  imageWidth?: number;\n}> = props => {\n  const imageWidth = props.imageWidth || 128;\n  const hoveringSizeChange = 6;\n  const [xPos, yPos] = HexagonPositioningService.getTilePositioning(props.tile.x, props.tile.y);\n  const [isHovering, setIsHovering] = useState(false);\n\n  return (\n    <div\n      className={css(props.noAbsolutePositioning ? styles.containerNoAbsolutePositioning\n        : styles.containerAbsolutePositioning)}\n      style={ props.noAbsolutePositioning ? {\n        width: `${imageWidth}px`,\n        height: `${HexagonPositioningService.getHeight(imageWidth)}px`,\n        display: 'inline-block'\n      } : {\n        top: `${xPos + (props.noOffset ? 0 : 800)}px`,\n        left: `${yPos + (props.noOffset ? 0 : 800)}px`\n      }}\n    >\n      <div className={css(styles.hitBoxes)}>\n        {\n          [0 * 60, 1 * 60, 2 * 60].map((degree, index) => {\n            return (\n              <div\n                key={index}\n                className={css(styles.hitBox)}\n                style={{\n                  transform: `rotate(${degree}deg)`\n                }}\n                onMouseEnter={() => {\n                  setIsHovering(true);\n                  props.onHover(true);\n                }}\n                onMouseLeave={() => {\n                  setIsHovering(false);\n                  props.onHover(false);\n                }}\n                onClick={props.onClick}\n              >\n              </div>\n            )\n          })\n        }\n      </div>\n\n      <div className={css(styles.imageContainer)}>\n        <img\n          src={AssetService.getTileUrl(\n            props.tile.type === \"placed\"\n              ? props.tile.abstractTile.assetName\n              : props.tile.asset\n          )}\n          className={css(styles.image/*, isHovering && styles.imageHovered*/)}\n          style={{\n            width: !isHovering ? `${imageWidth}px` : `${imageWidth - 2 * hoveringSizeChange}px`,\n            top: !isHovering ? 0 : `${hoveringSizeChange}px`,\n            left: !isHovering ? 0 : `${hoveringSizeChange}px`,\n          }}\n          alt={`${props.tile.type} tile of type`}\n        />\n\n        <div\n          className={css(styles.textContainer)}\n          style={{ width: `${imageWidth}px` }}\n        >\n          { props.children }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {Tile} from \"../commonui/Tile\";\nimport {Message} from \"../commonui/Message\";\nimport {MetricText} from \"../commonui/MetricText\";\nimport {ISpecificTile} from \"../../types\";\n\nconst styles = StyleSheet.create({\n  title: {\n    position: 'absolute',\n    width: '100%',\n    fontSize: '2.2em',\n    marginTop: '-100px',\n    zIndex: 500,\n    color: '#fff',\n    textShadow: '2px 2px 1px black',\n    fontFamily: '\"Pacifico\", cursive',\n    lineHeight: '1em'\n  },\n  titleContainer: {\n    position: 'relative',\n  }\n});\n\nexport const HoveredTileInformation: React.FC<{\n  tile: ISpecificTile\n}> = props => {\n\n  return (\n    <div>\n      <div style={{ zIndex: 100 }}>\n        <Tile\n          onHover={() => {}}\n          onClick={() => {}}\n          tile={props.tile}\n          noAbsolutePositioning={true}\n          imageWidth={256}\n        />\n      </div>\n\n      {\n        props.tile.type === \"placed\" && (\n          <div>\n            <div className={css(styles.titleContainer)}>\n              <h1 className={css(styles.title)}>\n                { props.tile.abstractTile.name }\n              </h1>\n            </div>\n\n            { props.tile.abstractTile.description && (\n              <Message>\n                { props.tile.abstractTile.description }\n              </Message>\n            ) }\n\n            <Message title={'Requires'}>\n              {\n                props.tile.abstractTile.requirements.map(r => (\n                  <MetricText\n                    key={r.resourceId}\n                    resourceInformation={r}\n                    longText={true}\n                  />\n                ))\n              }\n              { props.tile.abstractTile.requirements.length === 0 && 'Nothing' }\n            </Message>\n\n            <Message title={'Grants'}>\n              {\n                props.tile.abstractTile.grants.map(r => (\n                  <MetricText\n                    key={r.resourceId}\n                    resourceInformation={r}\n                    longText={true}\n                  />\n                ))\n              }\n              { props.tile.abstractTile.grants.length === 0 && 'Nothing' }\n            </Message>\n          </div>\n        )\n      }\n\n      {\n        props.tile.type === \"empty\" && (\n          <div>\n            <div className={css(styles.titleContainer)}>\n              <h1 className={css(styles.title)}>\n                Empty tile\n              </h1>\n            </div>\n\n            <Message title={'Resources'}>\n              {\n                props.tile.resources.map(r => (\n                  <MetricText\n                    key={r.resourceId}\n                    resourceInformation={r}\n                    longText={true}\n                  />\n                ))\n              }\n              { props.tile.resources.length === 0 && 'This tile does not have any resources.' }\n            </Message>\n          </div>\n        )\n      }\n\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {usePrimaryColor} from \"../../hooks\";\nimport {useMappedState} from \"redux-react-hook\";\nimport {IReduxState} from \"../../types\";\nimport {getHoveredTile} from \"../../state/filters\";\nimport {LevelInformation} from \"./LevelInformation\";\nimport {HoveredTileInformation} from \"./HoveredTileInformation\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '400px'\n  },\n  tileContainer: {\n    textAlign: 'center',\n    height: '100%'\n  }\n});\n\nexport const RightBar: React.FC<{}> = props => {\n  const backgroundColor = usePrimaryColor();\n  const { hoveredTile } = useMappedState((state: IReduxState) => ({\n    hoveredTile: getHoveredTile(state),\n    all: state.board.tiles.filter(t => t.type === \"placed\")\n  }));\n\n  return (\n    <div\n      className={css(styles.container)}\n      style={{ backgroundColor }}\n    >\n      <div\n        className={css(styles.tileContainer)}\n        style={{ backgroundColor }}\n      >\n        {\n          hoveredTile ? (\n            <HoveredTileInformation tile={hoveredTile}/>\n          ) : (\n            <LevelInformation/>\n          )\n        }\n      </div>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {\n  IAbstractTileInformationResourceInformation,\n  IReduxState,\n  ISpecificTile,\n  ResourceMetricIntent\n} from \"../../types\";\nimport {MetricText} from \"../commonui/MetricText\";\nimport {useDispatch, useMappedState} from \"redux-react-hook\";\nimport {getSelectedCard} from \"../../state/filters\";\nimport {testRequirements} from \"../../utils/testRequirements\";\nimport {useBuyTile} from \"../../hooks\";\nimport {HoverOverTile} from \"../../state/board\";\nimport {Tile} from \"../commonui/Tile\";\n\n\nexport const BoardTile: React.FC<{\n  tile: ISpecificTile;\n  noHoverEvent?: boolean;\n}> = props => {\n  const { selectedCard, allResources } = useMappedState((state: IReduxState) => ({\n    selectedCard: getSelectedCard(state),\n    allResources: state.resources\n  }));\n  const onBuy = useBuyTile(props.tile.x, props.tile.y);\n  const dispatch = useDispatch();\n\n  const onHover = (isHovering: boolean) => {\n    if (isHovering) {\n      dispatch(HoverOverTile.create({ x: props.tile.x, y: props.tile.y }));\n    } else {\n      dispatch(HoverOverTile.create({}));\n    }\n  }\n\n  const insuffucientRequirements = props.tile.type === \"empty\" && selectedCard\n    ? testRequirements(allResources, props.tile.resources, selectedCard) : [];\n\n  return (\n    <Tile\n      onHover={props.noHoverEvent ? () => {} : onHover}\n      onClick={onBuy}\n      tile={props.tile}\n    >\n      {\n        props.tile.type === \"empty\" && (\n          [\n            ...props.tile.resources,\n            ...allResources                                                              // Add resources\n              .filter(r => props.tile.type === \"empty\"                         // that are not on the tile\n                && !props.tile.resources.find(r2 => r2.resourceId === r.id))\n              .filter(r => insuffucientRequirements.find(i => i === r.id)) // but are insufficient\n              .map<IAbstractTileInformationResourceInformation>(r => ({ resourceId: r.id, amount: r.defaultValue || 0 }))\n          ].map(r => (\n            <MetricText\n              key={r.resourceId}\n              resourceInformation={r}\n              inTile={true}\n              textColor={'#fff'}\n              intent={insuffucientRequirements.includes(r.resourceId) ? ResourceMetricIntent.TO_LOW_COUNT : ResourceMetricIntent.SUFFICIENT}\n            />\n          ))\n        )\n      }\n    </Tile>\n  )\n};","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {TileBoardContainer} from \"../commonui/TileBoardContainer\";\nimport {BottomBar} from \"./BottomBar\";\nimport {useMappedState} from \"redux-react-hook\";\nimport {useBackgroundColor, useUrlRouting} from \"../../hooks\";\nimport {RightBar} from \"./RightBar\";\nimport {useState} from \"react\";\nimport {BoardTile} from \"./BoardTile\";\nimport {IReduxState} from \"../../types\";\nimport {getBoardTiles} from \"../../state/filters\";\n\nconst styles = StyleSheet.create({\n  verticalSplitContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  horizontalSplitContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    overflow: 'hidden'\n  }\n\n});\n\nexport const GameContainer: React.FC<{}> = props => {\n  const backgroundColor = useBackgroundColor();\n  const [isDragging, setIsDragging] = useState(false);\n  const { boardTiles, centering, levelId } = useMappedState((state: IReduxState) => ({\n    boardTiles: getBoardTiles(state),\n    centering: state.level && state.level.centering,\n    levelId: state.level && state.level.id\n  }));\n  useUrlRouting({ levelId });\n\n  return (\n    <div className={css(styles.verticalSplitContainer)}>\n      <div\n        className={css(styles.horizontalSplitContainer)}\n      >\n        <TileBoardContainer\n          isDragging={setIsDragging}\n          backgroundColor={backgroundColor}\n          initialCentering={centering || [3, 3]}\n        >\n          {\n            boardTiles.map(tile => (\n              <BoardTile tile={tile} key={`${tile.x}-${tile.y}`} noHoverEvent={isDragging}/>\n            ))\n          }\n        </TileBoardContainer>\n        <RightBar />\n      </div>\n\n      <BottomBar />\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {IReduxState} from \"../../types\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\nimport {useDispatch, useMappedState} from \"redux-react-hook\";\nimport {Button} from \"../commonui/Button\";\nimport {LeaveCampaign} from \"../../state/campaign\";\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    margin: '60px 0',\n    zIndex: 800,\n    display: 'flex',\n    width: '100%'\n  },\n  heading: {\n    flexGrow: 1,\n    paddingTop: '20px',\n    display: 'flex',\n    flexDirection: 'column-reverse'\n  },\n  title: {\n    marginBottom: '12px'\n  },\n  subTitle: {},\n  rightNotes: {\n    width: '200px',\n    textAlign: 'right',\n    padding: '40px 100px 0 0'\n  },\n  backButton: {\n    width: '100px',\n    padding: '0 50px 0 100px'\n  }\n});\n\nexport const CampaignTitle: React.FC<{}> = props => {\n  const dispatch = useDispatch();\n  const {campaign} = useMappedState((state: IReduxState) => ({\n    campaign: state.campaign\n  }));\n  const onBack = () => dispatch(LeaveCampaign.create({}));\n\n  if (!campaign) {\n    return null;\n  }\n\n  return (\n    <div className={css(styles.container)}>\n      <div className={css(styles.backButton)}>\n        <Button onClick={onBack} color={'#aaa'}>\n          Back to&nbsp;Menu\n        </Button>\n      </div>\n      <div className={css(styles.heading)}>\n        <div className={css(styles.subTitle)}>\n          <EmphasizedText fontSize={1.2} color={'#fff'}>\n            By { campaign.author.name }\n          </EmphasizedText>\n        </div>\n        <div className={css(styles.title)}>\n          <EmphasizedText fontSize={4}>\n            { campaign.name }\n          </EmphasizedText>\n        </div>\n      </div>\n      <div className={css(styles.rightNotes)}>\n        <EmphasizedText fontSize={1.5} color={'#fff'}>\n          Scroll by holding rightclick\n        </EmphasizedText>\n      </div>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {TileBoardContainer} from \"../commonui/TileBoardContainer\";\nimport {useDispatch, useMappedState} from \"redux-react-hook\";\nimport {IReduxState} from \"../../types\";\nimport {loadCampaignBoard} from \"../../utils/loadCampaignBoard\";\nimport {Tile} from \"../commonui/Tile\";\nimport {levels} from \"../../gamedata/levels\";\nimport {loadLevel} from \"../../utils/loadLevel\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\nimport {useUrlRouting} from \"../../hooks\";\nimport {CampaignTitle} from \"./CampaignTitle\";\n\n\nexport const CampaignMenu: React.FC<{}> = props => {\n  const dispatch = useDispatch();\n  const { campaign } = useMappedState((state: IReduxState) => ({\n    campaign: state.campaign!\n  }));\n  useUrlRouting({ campaignId: campaign.id });\n\n  const campaignBoard = loadCampaignBoard(campaign, levels);\n\n  return (\n    <>\n      <TileBoardContainer backgroundColor={campaign.backgroundColor} initialCentering={campaign.centering}>\n        {\n          campaignBoard.map(tile => (\n            <Tile\n              key={`${tile.x}-${tile.y}`}\n              tile={{\n                x: tile.x,\n                y: tile.y,\n                asset: tile.asset,\n                type: 'empty',\n                resources: []\n              }}\n              onClick={() => {\n                loadLevel(tile.level, dispatch);\n              }}\n              onHover={() => {}}\n            >\n              <EmphasizedText text={tile.level.name}/>\n            </Tile>\n          ))\n        }\n      </TileBoardContainer>\n      <CampaignTitle/>\n    </>\n  )\n};\n","import {ICampaign, ILevel} from \"../types\";\n\ninterface ICampaignBoardTile {\n  x: number;\n  y: number;\n  asset: string;\n  levelId: string;\n  requires: string[];\n  level: ILevel;\n}\n\nexport const loadCampaignBoard = (campaign: ICampaign, levels: ILevel[]): ICampaignBoardTile[] => {\n  const result: ICampaignBoardTile[] = [];\n\n  let x = 0;\n  let y = 0;\n  for (let row of campaign.tilemap) {\n    for (let piece of row.split('')) {\n      const resolvedPiece = campaign.tilemapLegend[piece];\n\n      if (resolvedPiece) {\n        result.push({\n          asset: resolvedPiece.asset,\n          levelId: resolvedPiece.levelId,\n          requires: resolvedPiece.requires,\n          level: levels.find(l => l.id === resolvedPiece.levelId)!,\n          x, y\n        });\n      }\n\n      x++;\n    }\n    y++;\n    x = 0;\n  }\n\n  return result;\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\nimport Color from \"color\";\nimport {useState} from \"react\";\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    margin: '15px 15px 0 15px',\n    flexGrow: 1\n  },\n  buttonContainer: {\n    position: 'relative',\n    border: 0,\n    padding: '40px 60px',\n    borderRadius: '20px',\n    transition: 'all .1s ease',\n    outline: 'none',\n    margin: '0 8px 14px 0',\n    cursor: 'pointer',\n    zIndex: 100,\n\n    ':active': {\n      margin: '14px 0 0 8px',\n      boxShadow: 'none'\n    }\n  },\n  buttonContainerHovering: {\n\n  }\n});\n\nexport const MainMenuButton: React.FC<{\n  text: string;\n  color: string;\n  asset: string;\n  fill?: boolean;\n  onClick?: () => void;\n}> = props => {\n  const [isHovering, setIsHovering] = useState(false);\n\n  const shade = (ratio: number) => Color(props.color).lighten(ratio).string();\n\n  return (\n    <div className={css(styles.outerContainer)}>\n      <button\n        className={css(styles.buttonContainer, isHovering && styles.buttonContainerHovering)}\n        style={{\n          backgroundColor: isHovering ? shade(0) : shade(.2),\n          width: props.fill ? '100%' : undefined,\n          boxShadow: `8px 14px 1px ${shade(-.6)}`\n        }}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n        onClick={props.onClick || (() => {})}\n      >\n        <EmphasizedText text={props.text} fontSize={3} color={'#fff'}/>\n      </button>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {Tile} from \"../commonui/Tile\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '120%',\n    height: '120%',\n    position: 'fixed',\n    top: -40,\n    left: -40,\n    zIndex: -1,\n    backgroundColor: '#2ecc71'\n  }\n});\n\nexport const MenuBackground: React.FC<{}> = props => {\n  const assets: string[] = [\n    'tile5', // grass\n    'tile10', 'tile13', // trees\n    'tile14', 'tile15', // rocks\n    'tile134', 'tile124', 'tile128', 'tile157', 'tile129' // buildings\n  ];\n\n  const board = [\n    '00.3.1...0020...613....1905..10.',\n    '..600..120....0217..20..2..460..',\n    '.015...00...02...370..6.02...32.',\n    '....11...107...10...17..71.0..1.',\n    '..194..20..127....382.0...4..2..',\n    '02...20...51..01..0..10..90.280.',\n    '.80...10..20.2...6....2.3..0....',\n    '...1704..200..19....12.0..15.123',\n\n    '00.3.1...0020...613....1905..10.',\n    '..600..120....0217..20..2..460..',\n    '.015...00...02...370..6.02...32.',\n    '....11...107...10...17..71.0..1.',\n    '..194..20..127....382.0...4..2..',\n    '02...20...51..01..0..10..90.280.',\n    '.80...10..20.2...6....2.3..0....',\n    '...1704..200..19....12.0..15.123',\n  ];\n  const tiles: Array<{ x: number, y: number, asset: string }> = [];\n\n  for (let y = 0; y < board.length; y++) {\n    for (let x = 0; x < board[y].length; x++) {\n      const char = board[y].charAt(x);\n      if (char !== '.') {\n        tiles.push({ x, y, asset: assets[parseInt(char)] });\n      }\n    }\n  }\n\n  return (\n    <div className={css(styles.container)}>\n      {\n        tiles.map(tile => (\n          <Tile\n            key={`${tile.x}-${tile.y}`}\n            tile={{\n              x: tile.x,\n              y: tile.y,\n              asset: tile.asset,\n              type: 'empty',\n              resources: []\n            }}\n            onClick={() => {}}\n            onHover={() => {}}\n            noOffset={true}\n          />\n        ))\n      }\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport {MainMenuButton} from \"./MainMenuButton\";\nimport {usePrimaryColor} from \"../../hooks\";\nimport {useDispatch} from \"redux-react-hook\";\nimport {LoadCampaign} from \"../../state/campaign\";\nimport {MenuBackground} from \"./MenuBackground\";\nimport Color from \"color\";\nimport {EmphasizedText} from \"../commonui/EmphasizedText\";\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    height: '100%',\n    width: '100%',\n    position: 'relative'\n  },\n  containerVerticalCentering: {\n    height: '100%',\n    width: '800px',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  containerHorizontalCentering: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  innerContainer: {\n  },\n  twoButtonContainer: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '8em'\n  },\n  footer: {\n    position: 'absolute',\n    bottom: '2em',\n    left: 0,\n    width: '100%',\n    textAlign: 'center',\n    fontSize: '1.2em',\n    color: '#fff',\n    fontWeight: 'bold',\n    textShadow: '2px 2px 1px black',\n  },\n  footerLink: {\n    display: 'inline-block',\n    textShadow: 'none',\n    textDecoration: 'none',\n    borderBottom: '3px solid #2c3e50',\n    color: '#2c3e50',\n    transition: 'all .1s ease',\n    padding: '0 0 8px 0',\n    lineHeight: '.8em',\n\n    ':hover': {\n      color: Color('#2c3e50').lighten(.6).string(),\n      padding: '0 0 4px 0',\n      marginBottom: '4px'\n    },\n    ':active': {\n      color: '#fff'\n    }\n  }\n});\n\nconst TwoButtonContainer: React.FC<{}> = props => (\n  <div className={css(styles.twoButtonContainer)}>\n    { props.children }\n  </div>\n);\n\nexport const MainMenu: React.FC<{}> = props => {\n  const backgroundColor = usePrimaryColor();\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css(styles.outerContainer)}>\n      <MenuBackground />\n      <div className={css(styles.containerHorizontalCentering)}>\n        <div className={css(styles.containerVerticalCentering)}>\n          <div className={css(styles.innerContainer)}>\n            <div className={css(styles.header)}>\n              <EmphasizedText fontSize={8}>\n                Hexagonopolis\n              </EmphasizedText>\n            </div>\n\n            <MainMenuButton\n              text={'Campaign'}\n              color={backgroundColor || '#000'}\n              asset={'tile4'}\n              fill={true}\n              onClick={() => dispatch(LoadCampaign.create({ campaignId: 'campaign-default' }))}\n            />\n\n            <MainMenuButton\n              text={'Fill the City'}\n              color={backgroundColor || '#000'}\n              asset={'tile4'}\n              fill={true}\n              onClick={() => dispatch(LoadCampaign.create({ campaignId: 'campaign-mapfills' }))}\n            />\n\n            <TwoButtonContainer>\n              <MainMenuButton\n                text={'GitHub Repo'}\n                color={backgroundColor || '#000'}\n                asset={'tile4'}\n                fill={true}\n                onClick={() => window.open('https://github.com/lukasbach/hexagonopolis', '_blank')}\n              />\n              <MainMenuButton\n                text={'About'}\n                color={backgroundColor || '#000'}\n                asset={'tile4'}\n                fill={true}\n                onClick={() => window.open('https://github.com/lukasbach/hexagonopolis/blob/master/README.md', '_blank')}\n              />\n            </TwoButtonContainer>\n          </div>\n        </div>\n      </div>\n\n      <div className={css(styles.footer)}>\n        Game developed by <a href={'https://lukasbach.com'} target={'_blank'} className={css(styles.footerLink)}>Lukas Bach</a>,\n        Assets designed by <a href={'https://kenney.nl'} target={'_blank'} className={css(styles.footerLink)}>Kenney</a>.<br />\n        Also check out <a href={'https://devsession.js.org'} target={'_blank'} className={css(styles.footerLink)}>DevSession</a>!\n      </div>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport {useMappedState} from \"redux-react-hook\";\nimport {IReduxState} from \"../types\";\nimport {GameContainer} from \"./level/GameContainer\";\nimport {CampaignMenu} from \"./campaign/CampaignMenu\";\nimport {MainMenu} from \"./menu/MainMenu\";\n\n\nexport const ScreenRouter: React.FC<{}> = props => {\n  const { isInGame, isInCampaign, isInMainMenu } = useMappedState((state: IReduxState) => ({\n    isInGame: !!state.level,\n    isInCampaign: !state.level && !!state.campaign,\n    isInMainMenu: !state.level && !state.campaign\n  }));\n\n  return (\n    <>\n      {\n        isInGame\n          ? <GameContainer />\n          : isInCampaign\n          ? <CampaignMenu />\n          : isInMainMenu\n          ? <MainMenu />\n          : <div>Routing Error</div>\n      }\n    </>\n  )\n};\n","import {store} from \"./state\";\nimport * as React from \"react\";\nimport {useEffect} from \"react\";\nimport {StoreContext} from \"redux-react-hook\";\nimport {loadLevel} from \"./utils/loadLevel\";\nimport {levels} from \"./gamedata/levels\";\nimport {LoadCampaign} from \"./state/campaign\";\nimport {ScreenRouter} from \"./components/ScreenRouter\";\nimport UrlRoutingService from \"./utils/UrlRoutingService\";\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    const campaign = UrlRoutingService.getCampaign();\n    const level = UrlRoutingService.getLevel();\n    console.log(campaign, level)\n\n    if (campaign) {\n      store.dispatch(LoadCampaign.create({ campaignId: 'campaign-default' }));\n    }\n\n    if (level) {\n      const levelObj = levels.find(l => l.id === level)!;\n      loadLevel(levelObj, store.dispatch);\n    }\n  });\n\n  return (\n    <StoreContext.Provider value={store}>\n      <ScreenRouter />\n    </StoreContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}